{
  "version": 3,
  "sources": ["../../vuetify/src/components/VSelect/VSelect.tsx", "../../vuetify/src/components/VCheckbox/VCheckbox.tsx", "../../vuetify/src/components/VCheckbox/VCheckboxBtn.tsx", "../../vuetify/src/components/VList/VList.tsx", "../../vuetify/src/components/VList/list.ts", "../../vuetify/src/composables/nested/activeStrategies.ts", "../../vuetify/src/composables/nested/openStrategies.ts", "../../vuetify/src/composables/nested/selectStrategies.ts", "../../vuetify/src/composables/nested/nested.ts", "../../vuetify/src/components/VList/VListGroup.tsx", "../../vuetify/src/components/VList/VListItem.tsx", "../../vuetify/src/components/VList/VListItemSubtitle.tsx", "../../vuetify/src/components/VList/VListItemTitle.ts", "../../vuetify/src/components/VList/VListSubheader.tsx", "../../vuetify/src/components/VDivider/VDivider.tsx", "../../vuetify/src/components/VList/VListChildren.tsx", "../../vuetify/src/composables/list-items.ts", "../../vuetify/src/components/VList/VListImg.ts", "../../vuetify/src/components/VList/VListItemAction.tsx", "../../vuetify/src/components/VList/VListItemMedia.tsx", "../../vuetify/src/components/VMenu/VMenu.tsx", "../../vuetify/src/composables/forwardRefs.ts", "../../vuetify/src/components/VTextField/VTextField.tsx", "../../vuetify/src/components/VCounter/VCounter.tsx", "../../vuetify/src/components/VField/VField.tsx", "../../vuetify/src/components/VField/VFieldLabel.tsx", "../../vuetify/src/composables/autofocus.ts", "../../vuetify/src/components/VVirtualScroll/VVirtualScroll.tsx", "../../vuetify/src/components/VVirtualScroll/VVirtualScrollItem.tsx", "../../vuetify/src/composables/virtual.ts", "../../vuetify/src/components/VSelect/useScrolling.ts"],
  "sourcesContent": ["// Styles\nimport './VSelect.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\nimport { VVirtualScroll } from '@/components/VVirtualScroll'\n\n// Composables\nimport { useScrolling } from './useScrolling'\nimport { useForm } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { IconValue } from '@/composables/icons'\nimport { makeItemsProps, useItems } from '@/composables/list-items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\n\n// Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, toRef, watch } from 'vue'\nimport {\n  camelizeProps,\n  checkPrintable,\n  deepEqual,\n  ensureValidVNode,\n  genericComponent,\n  IN_BROWSER,\n  matchesSelector,\n  omit,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { Component, PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = [T] extends [Primitive]\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject> | null\n\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  closeText: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  openText: {\n    type: String,\n    default: '$vuetify.open',\n  },\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  listProps: {\n    type: Object as PropType<VList['$props']>,\n  },\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: '$dropdown',\n  },\n  menuProps: {\n    type: Object as PropType<VMenu['$props']>,\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  openOnClear: Boolean,\n  itemColor: String,\n\n  ...makeItemsProps({ itemChildren: false }),\n}, 'Select')\n\nexport const makeVSelectProps = propsFactory({\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox',\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({ transition: { component: VDialogTransition as Component } }),\n}, 'VSelect')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VSelect = genericComponent<new <\n  T extends readonly any[],\n  Item = ItemType<T>,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<Item, ReturnObject, Multiple> = Value<Item, ReturnObject, Multiple>\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V | null\n    'onUpdate:modelValue'?: (value: V) => void\n  },\n  slots: Omit<VInputSlots & VFieldSlots, 'default'> & {\n    item: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    chip: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    selection: { item: ListItem<Item>, index: number }\n    'prepend-item': never\n    'append-item': never\n    'no-data': never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelect',\n\n  props: makeVSelectProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (value: any) => true,\n    'update:menu': (ue: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref<VTextField>()\n    const vMenuRef = ref<VMenu>()\n    const vVirtualScrollRef = ref<VVirtualScroll>()\n    const { items, transformIn, transformOut } = useItems(props)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(v === null ? [null] : wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : model.value.length\n    })\n    const form = useForm(props)\n    const selectedValues = computed(() => model.value.map(selection => selection.value))\n    const isFocused = shallowRef(false)\n\n    let keyboardLookupPrefix = ''\n    let keyboardLookupIndex = -1\n    let keyboardLookupLastTime: number\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return items.value.filter(item => !model.value.some(s => (props.valueComparator || deepEqual)(s, item)))\n      }\n      return items.value\n    })\n\n    const menuDisabled = computed(() => (\n      (props.hideNoData && !displayItems.value.length) ||\n      form.isReadonly.value || form.isDisabled.value\n    ))\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren.size) return\n        if (v && menuDisabled.value) return\n        _menu.value = v\n      },\n    })\n\n    const label = toRef(() => menu.value ? props.closeText : props.openText)\n\n    const computedMenuProps = computed(() => {\n      return {\n        ...props.menuProps,\n        activatorProps: {\n          ...(props.menuProps?.activatorProps || {}),\n          'aria-haspopup': 'listbox', // Set aria-haspopup to 'listbox'\n        },\n      }\n    })\n\n    const listRef = ref<VList>()\n    const listEvents = useScrolling(listRef, vTextFieldRef)\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onMousedownControl () {\n      if (menuDisabled.value) return\n\n      menu.value = !menu.value\n    }\n    function onListKeydown (e: KeyboardEvent) {\n      if (checkPrintable(e)) {\n        onKeydown(e)\n      }\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (!e.key || form.isReadonly.value) return\n\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (e.key === 'Home') {\n        listRef.value?.focus('first')\n      } else if (e.key === 'End') {\n        listRef.value?.focus('last')\n      }\n\n      // html select hotkeys\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n\n      if (!checkPrintable(e)) return\n\n      const now = performance.now()\n      if (now - keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        keyboardLookupPrefix = ''\n        keyboardLookupIndex = -1\n      }\n      keyboardLookupPrefix += e.key.toLowerCase()\n      keyboardLookupLastTime = now\n\n      const items = displayItems.value\n      function findItem () {\n        let result = findItemBase()\n        if (result) return result\n\n        if (keyboardLookupPrefix.at(-1) === keyboardLookupPrefix.at(-2)) {\n          // No matches but we have a repeated letter, try the next item with that prefix\n          keyboardLookupPrefix = keyboardLookupPrefix.slice(0, -1)\n          result = findItemBase()\n          if (result) return result\n        }\n\n        // Still nothing, wrap around to the top\n        keyboardLookupIndex = -1\n        result = findItemBase()\n        if (result) return result\n\n        // Still nothing, try just the new letter\n        keyboardLookupPrefix = e.key.toLowerCase()\n        return findItemBase()\n      }\n      function findItemBase () {\n        for (let i = keyboardLookupIndex + 1; i < items.length; i++) {\n          const _item = items[i]\n          if (_item.title.toLowerCase().startsWith(keyboardLookupPrefix)) {\n            return [_item, i] as const\n          }\n        }\n        return undefined\n      }\n\n      const result = findItem()\n      if (!result) return\n\n      const [item, index] = result\n      keyboardLookupIndex = index\n      listRef.value?.focus(index)\n      if (!props.multiple) {\n        model.value = [item]\n      }\n    }\n\n    /** @param set - null means toggle */\n    function select (item: ListItem, set: boolean | null = true) {\n      if (item.props.disabled) return\n\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => (props.valueComparator || deepEqual)(selection.value, item.value))\n        const add = set == null ? !~index : set\n\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        } else if (add) {\n          model.value = [...model.value, item]\n        }\n      } else {\n        const add = set !== false\n        model.value = add ? [item] : []\n\n        nextTick(() => {\n          menu.value = false\n        })\n      }\n    }\n    function onBlur (e: FocusEvent) {\n      if (!listRef.value?.$el.contains(e.relatedTarget as HTMLElement)) {\n        menu.value = false\n      }\n    }\n    function onAfterEnter () {\n      if (props.eager) {\n        vVirtualScrollRef.value?.calculateVisibleItems()\n      }\n    }\n    function onAfterLeave () {\n      if (isFocused.value) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n    function onModelUpdate (v: any) {\n      if (v == null) model.value = []\n      else if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === v)\n        if (item) {\n          select(item)\n        }\n      } else if (vTextFieldRef.value) {\n        vTextFieldRef.value.value = ''\n      }\n    }\n\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(\n          item => model.value.some(s => (props.valueComparator || deepEqual)(s.value, item.value))\n        )\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    })\n\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value) return\n\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true\n      }\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!(\n        (!props.hideNoData || displayItems.value.length) ||\n        slots['prepend-item'] ||\n        slots['append-item'] ||\n        slots['no-data']\n      )\n      const isDirty = model.value.length > 0\n      const textFieldProps = VTextField.filterProps(props)\n\n      const placeholder = isDirty || (\n        !isFocused.value &&\n        props.label &&\n        !props.persistentPlaceholder\n      ) ? undefined : props.placeholder\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          modelValue={ model.value.map(v => v.props.value).join(', ') }\n          onUpdate:modelValue={ onModelUpdate }\n          v-model:focused={ isFocused.value }\n          validationValue={ model.externalValue }\n          counterValue={ counterValue.value }\n          dirty={ isDirty }\n          class={[\n            'v-select',\n            {\n              'v-select--active-menu': menu.value,\n              'v-select--chips': !!props.chips,\n              [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n              'v-select--selected': model.value.length,\n              'v-select--selection-slot': !!slots.selection,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          inputmode=\"none\"\n          placeholder={ placeholder }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onBlur={ onBlur }\n          onKeydown={ onKeydown }\n          aria-label={ t(label.value) }\n          title={ t(label.value) }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-select__content\"\n                  disabled={ menuDisabled.value }\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterEnter={ onAfterEnter }\n                  onAfterLeave={ onAfterLeave }\n                  { ...computedMenuProps.value }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selectedValues.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onKeydown={ onListKeydown }\n                      onFocusin={ onFocusin }\n                      tabindex=\"-1\"\n                      aria-live=\"polite\"\n                      aria-label={ `${props.label}-list` }\n                      color={ props.itemColor ?? props.color }\n                      { ...listEvents }\n                      { ...props.listProps }\n                    >\n                      { slots['prepend-item']?.() }\n\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem key=\"no-data\" title={ t(props.noDataText) } />\n                      ))}\n\n                      <VVirtualScroll ref={ vVirtualScrollRef } renderless items={ displayItems.value } itemKey=\"value\">\n                        { ({ item, index, itemRef }) => {\n                          const camelizedProps = camelizeProps(item.props)\n\n                          const itemProps = mergeProps(item.props, {\n                            ref: itemRef,\n                            key: item.value,\n                            onClick: () => select(item, null),\n                          })\n\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: itemProps,\n                          }) ?? (\n                            <VListItem { ...itemProps } role=\"option\">\n                              {{\n                                prepend: ({ isSelected }) => (\n                                  <>\n                                    { props.multiple && !props.hideSelected ? (\n                                      <VCheckboxBtn\n                                        key={ item.value }\n                                        modelValue={ isSelected }\n                                        ripple={ false }\n                                        tabindex=\"-1\"\n                                      />\n                                    ) : undefined }\n\n                                    { camelizedProps.prependAvatar && (\n                                      <VAvatar image={ camelizedProps.prependAvatar } />\n                                    )}\n\n                                    { camelizedProps.prependIcon && (\n                                      <VIcon icon={ camelizedProps.prependIcon } />\n                                    )}\n                                  </>\n                                ),\n                              }}\n                            </VListItem>\n                          )\n                        }}\n                      </VVirtualScroll>\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { model.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item, false)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    onKeydown (e: KeyboardEvent) {\n                      if (e.key !== 'Enter' && e.key !== ' ') return\n\n                      e.preventDefault()\n                      e.stopPropagation()\n\n                      onChipClose(e)\n                    },\n                    onMousedown (e: MouseEvent) {\n                      e.preventDefault()\n                      e.stopPropagation()\n                    },\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  const hasSlot = hasChips ? !!slots.chip : !!slots.selection\n                  const slotContent = hasSlot\n                    ? ensureValidVNode(\n                      hasChips\n                        ? slots.chip!({ item, index, props: slotProps })\n                        : slots.selection!({ item, index })\n                    )\n                    : undefined\n\n                  if (hasSlot && !slotContent) return undefined\n\n                  return (\n                    <div key={ item.value } class=\"v-select__selection\">\n                      { hasChips ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            disabled={ item.props.disabled }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slotContent }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slotContent ?? (\n                          <span class=\"v-select__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < model.value.length - 1) && (\n                              <span class=\"v-select__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n            'append-inner': (...args) => (\n              <>\n                { slots['append-inner']?.(...args) }\n                { props.menuIcon ? (\n                  <VIcon\n                    class=\"v-select__menu-icon\"\n                    color={ vTextFieldRef.value?.fieldIconColor }\n                    icon={ props.menuIcon }\n                  />\n                ) : undefined }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      menu,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VSelect = InstanceType<typeof VSelect>\n", "// Styles\nimport './VCheckbox.sass'\n\n// Components\nimport { makeVCheckboxBtnProps, VCheckboxBtn } from './VCheckboxBtn'\nimport { makeVInputProps, VInput } from '@/components/VInput/VInput'\n\n// Composables\nimport { useFocus } from '@/composables/focus'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { useId } from 'vue'\nimport { filterInputAttrs, genericComponent, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VSelectionControlSlots } from '../VSelectionControl/VSelectionControl'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { GenericProps } from '@/util'\n\nexport type VCheckboxSlots = Omit<VInputSlots, 'default'> & VSelectionControlSlots\n\nexport const makeVCheckboxProps = propsFactory({\n  ...makeVInputProps(),\n  ...omit(makeVCheckboxBtnProps(), ['inline']),\n}, 'VCheckbox')\n\nexport const VCheckbox = genericComponent<new <T>(\n  props: {\n    modelValue?: T | null\n    'onUpdate:modelValue'?: (value: T | null) => void\n  },\n  slots: VCheckboxSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VCheckbox',\n\n  inheritAttrs: false,\n\n  props: makeVCheckboxProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n    'update:focused': (focused: boolean) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const { isFocused, focus, blur } = useFocus(props)\n\n    const uid = useId()\n\n    useRender(() => {\n      const [rootAttrs, controlAttrs] = filterInputAttrs(attrs)\n      const inputProps = VInput.filterProps(props)\n      const checkboxProps = VCheckboxBtn.filterProps(props)\n\n      return (\n        <VInput\n          class={[\n            'v-checkbox',\n            props.class,\n          ]}\n          { ...rootAttrs }\n          { ...inputProps }\n          v-model={ model.value }\n          id={ props.id || `checkbox-${uid}` }\n          focused={ isFocused.value }\n          style={ props.style }\n        >\n          {{\n            ...slots,\n            default: ({\n              id,\n              messagesId,\n              isDisabled,\n              isReadonly,\n              isValid,\n            }) => (\n              <VCheckboxBtn\n                { ...checkboxProps }\n                id={ id.value }\n                aria-describedby={ messagesId.value }\n                disabled={ isDisabled.value }\n                readonly={ isReadonly.value }\n                { ...controlAttrs }\n                error={ isValid.value === false }\n                v-model={ model.value }\n                onFocus={ focus }\n                onBlur={ blur }\n                v-slots={ slots }\n              />\n            ),\n          }}\n        </VInput>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCheckbox = InstanceType<typeof VCheckbox>\n", "// Components\nimport { makeVSelectionControlProps, VSelectionControl } from '@/components/VSelectionControl/VSelectionControl'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { genericComponent, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VSelectionControlSlots } from '@/components/VSelectionControl/VSelectionControl'\nimport type { GenericProps } from '@/util'\n\nexport const makeVCheckboxBtnProps = propsFactory({\n  indeterminate: Boolean,\n  indeterminateIcon: {\n    type: IconValue,\n    default: '$checkboxIndeterminate',\n  },\n\n  ...makeVSelectionControlProps({\n    falseIcon: '$checkboxOff',\n    trueIcon: '$checkboxOn',\n  }),\n}, 'VCheckboxBtn')\n\nexport const VCheckboxBtn = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSelectionControlSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VCheckboxBtn',\n\n  props: makeVCheckboxBtnProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n    'update:indeterminate': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const indeterminate = useProxiedModel(props, 'indeterminate')\n    const model = useProxiedModel(props, 'modelValue')\n\n    function onChange (v: any) {\n      if (indeterminate.value) {\n        indeterminate.value = false\n      }\n    }\n\n    const falseIcon = toRef(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.falseIcon\n    })\n\n    const trueIcon = toRef(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.trueIcon\n    })\n\n    useRender(() => {\n      const controlProps = omit(VSelectionControl.filterProps(props), ['modelValue'])\n      return (\n        <VSelectionControl\n          { ...controlProps }\n          v-model={ model.value }\n          class={[\n            'v-checkbox-btn',\n            props.class,\n          ]}\n          style={ props.style }\n          type=\"checkbox\"\n          onUpdate:modelValue={ onChange }\n          falseIcon={ falseIcon.value }\n          trueIcon={ trueIcon.value }\n          aria-checked={ indeterminate.value ? 'mixed' : undefined }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCheckboxBtn = InstanceType<typeof VCheckboxBtn>\n", "// Styles\nimport './VList.sass'\n\n// Components\nimport { VListChildren } from './VListChildren'\n\n// Composables\nimport { createList } from './list'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { IconValue } from '@/composables/icons'\nimport { makeItemsProps } from '@/composables/list-items'\nimport { makeNestedProps, useNested } from '@/composables/nested/nested'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeVariantProps } from '@/composables/variant'\n\n// Utilities\nimport { computed, ref, shallowRef, toRef } from 'vue'\nimport {\n  EventProp,\n  focusChild,\n  genericComponent,\n  getPropertyFromItem,\n  isPrimitive,\n  omit,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VListChildrenSlots } from './VListChildren'\nimport type { ItemProps, ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\nexport interface InternalListItem<T = any> extends ListItem<T> {\n  type?: 'item' | 'subheader' | 'divider'\n}\n\nfunction transformItem (props: ItemProps & { itemType?: string }, item: any): InternalListItem {\n  const type = getPropertyFromItem(item, props.itemType, 'item')\n  const title = isPrimitive(item) ? item : getPropertyFromItem(item, props.itemTitle)\n  const value = getPropertyFromItem(item, props.itemValue, undefined)\n  const children = getPropertyFromItem(item, props.itemChildren)\n  const itemProps = props.itemProps === true\n    ? omit(item, ['children'])\n    : getPropertyFromItem(item, props.itemProps)\n\n  const _props = {\n    title,\n    value,\n    ...itemProps,\n  }\n\n  return {\n    type,\n    title: _props.title,\n    value: _props.value,\n    props: _props,\n    children: type === 'item' && children ? transformItems(props, children) : undefined,\n    raw: item,\n  }\n}\n\nfunction transformItems (props: ItemProps & { itemType?: string }, items: (string | object)[]) {\n  const array: InternalListItem[] = []\n\n  for (const item of items) {\n    array.push(transformItem(props, item))\n  }\n\n  return array\n}\n\nexport function useListItems (props: ItemProps & { itemType?: string }) {\n  const items = computed(() => transformItems(props, props.items))\n\n  return { items }\n}\n\nexport const makeVListProps = propsFactory({\n  baseColor: String,\n  /* @deprecated */\n  activeColor: String,\n  activeClass: String,\n  bgColor: String,\n  disabled: Boolean,\n  expandIcon: IconValue,\n  collapseIcon: IconValue,\n  lines: {\n    type: [Boolean, String] as PropType<'one' | 'two' | 'three' | false>,\n    default: 'one',\n  },\n  slim: Boolean,\n  nav: Boolean,\n\n  'onClick:open': EventProp<[{ id: unknown, value: boolean, path: unknown[] }]>(),\n  'onClick:select': EventProp<[{ id: unknown, value: boolean, path: unknown[] }]>(),\n  'onUpdate:opened': EventProp<[]>(),\n  ...makeNestedProps({\n    selectStrategy: 'single-leaf' as const,\n    openStrategy: 'list' as const,\n  }),\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  itemType: {\n    type: String,\n    default: 'type',\n  },\n  ...makeItemsProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'text' } as const),\n}, 'VList')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VList = genericComponent<new <\n  T extends readonly any[],\n  S = unknown,\n  O = unknown\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemChildren?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    selected?: S\n    'onUpdate:selected'?: (value: S) => void\n    'onClick:open'?: (value: { id: unknown, value: boolean, path: unknown[] }) => void\n    'onClick:select'?: (value: { id: unknown, value: boolean, path: unknown[] }) => void\n    opened?: O\n    'onUpdate:opened'?: (value: O) => void\n  },\n  slots: VListChildrenSlots<ItemType<T>>\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VList',\n\n  props: makeVListProps(),\n\n  emits: {\n    'update:selected': (value: unknown) => true,\n    'update:activated': (value: unknown) => true,\n    'update:opened': (value: unknown) => true,\n    'click:open': (value: { id: unknown, value: boolean, path: unknown[] }) => true,\n    'click:activate': (value: { id: unknown, value: boolean, path: unknown[] }) => true,\n    'click:select': (value: { id: unknown, value: boolean, path: unknown[] }) => true,\n  },\n\n  setup (props, { slots }) {\n    const { items } = useListItems(props)\n    const { themeClasses } = provideTheme(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(() => props.bgColor)\n    const { borderClasses } = useBorder(props)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { children, open, parents, select, getPath } = useNested(props)\n    const lineClasses = toRef(() => props.lines ? `v-list--${props.lines}-line` : undefined)\n    const activeColor = toRef(() => props.activeColor)\n    const baseColor = toRef(() => props.baseColor)\n    const color = toRef(() => props.color)\n\n    createList()\n\n    provideDefaults({\n      VListGroup: {\n        activeColor,\n        baseColor,\n        color,\n        expandIcon: toRef(() => props.expandIcon),\n        collapseIcon: toRef(() => props.collapseIcon),\n      },\n      VListItem: {\n        activeClass: toRef(() => props.activeClass),\n        activeColor,\n        baseColor,\n        color,\n        density: toRef(() => props.density),\n        disabled: toRef(() => props.disabled),\n        lines: toRef(() => props.lines),\n        nav: toRef(() => props.nav),\n        slim: toRef(() => props.slim),\n        variant: toRef(() => props.variant),\n      },\n    })\n\n    const isFocused = shallowRef(false)\n    const contentRef = ref<HTMLElement>()\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n\n    function onFocusout (e: FocusEvent) {\n      isFocused.value = false\n    }\n\n    function onFocus (e: FocusEvent) {\n      if (\n        !isFocused.value &&\n        !(e.relatedTarget && contentRef.value?.contains(e.relatedTarget as Node))\n      ) focus()\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      const target = e.target as HTMLElement\n\n      if (!contentRef.value || ['INPUT', 'TEXTAREA'].includes(target.tagName)) return\n\n      if (e.key === 'ArrowDown') {\n        focus('next')\n      } else if (e.key === 'ArrowUp') {\n        focus('prev')\n      } else if (e.key === 'Home') {\n        focus('first')\n      } else if (e.key === 'End') {\n        focus('last')\n      } else {\n        return\n      }\n\n      e.preventDefault()\n    }\n\n    function onMousedown (e: MouseEvent) {\n      isFocused.value = true\n    }\n\n    function focus (location?: 'next' | 'prev' | 'first' | 'last' | number) {\n      if (contentRef.value) {\n        return focusChild(contentRef.value, location)\n      }\n    }\n\n    useRender(() => {\n      return (\n        <props.tag\n          ref={ contentRef }\n          class={[\n            'v-list',\n            {\n              'v-list--disabled': props.disabled,\n              'v-list--nav': props.nav,\n              'v-list--slim': props.slim,\n            },\n            themeClasses.value,\n            backgroundColorClasses.value,\n            borderClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            lineClasses.value,\n            roundedClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            dimensionStyles.value,\n            props.style,\n          ]}\n          tabindex={ props.disabled ? -1 : 0 }\n          role=\"listbox\"\n          aria-activedescendant={ undefined }\n          onFocusin={ onFocusin }\n          onFocusout={ onFocusout }\n          onFocus={ onFocus }\n          onKeydown={ onKeydown }\n          onMousedown={ onMousedown }\n        >\n          <VListChildren\n            items={ items.value }\n            returnObject={ props.returnObject }\n            v-slots={ slots }\n          />\n        </props.tag>\n      )\n    })\n\n    return {\n      open,\n      select,\n      focus,\n      children,\n      parents,\n      getPath,\n    }\n  },\n})\n\nexport type VList = InstanceType<typeof VList>\n", "// Utilities\nimport { computed, inject, provide, shallowRef } from 'vue'\n\n// Types\nimport type { InjectionKey, Ref } from 'vue'\n\n// Depth\nexport const DepthKey: InjectionKey<Ref<number>> = Symbol.for('vuetify:depth')\n\nexport function useDepth (hasPrepend?: Ref<boolean>) {\n  const parent = inject(DepthKey, shallowRef(-1))\n\n  const depth = computed(() => parent.value + 1 + (hasPrepend?.value ? 1 : 0))\n\n  provide(DepthKey, depth)\n\n  return depth\n}\n\n// List\nexport const ListKey: InjectionKey<{\n  hasPrepend: Ref<boolean>\n  updateHasPrepend: (value: boolean) => void\n}> = Symbol.for('vuetify:list')\n\nexport function createList () {\n  const parent = inject(ListKey, { hasPrepend: shallowRef(false), updateHasPrepend: () => null })\n\n  const data = {\n    hasPrepend: shallowRef(false),\n    updateHasPrepend: (value: boolean) => {\n      if (value) data.hasPrepend.value = value\n    },\n  }\n\n  provide(ListKey, data)\n\n  return parent\n}\n\nexport function useList () {\n  return inject(ListKey, null)\n}\n", "/* eslint-disable sonarjs/no-identical-functions */\n// Utilities\nimport { toRaw } from 'vue'\nimport { wrapInArray } from '@/util'\n\ntype ActiveStrategyFunction = (data: {\n  id: unknown\n  value: boolean\n  activated: Set<unknown>\n  children: Map<unknown, unknown[]>\n  parents: Map<unknown, unknown>\n  event?: Event\n}) => Set<unknown>\n\ntype ActiveStrategyTransformInFunction = (\n  v: unknown | undefined,\n  children: Map<unknown, unknown[]>,\n  parents: Map<unknown, unknown>,\n) => Set<unknown>\n\ntype ActiveStrategyTransformOutFunction = (\n  v: Set<unknown>,\n  children: Map<unknown, unknown[]>,\n  parents: Map<unknown, unknown>,\n) => unknown\n\nexport type ActiveStrategy = {\n  activate: ActiveStrategyFunction\n  in: ActiveStrategyTransformInFunction\n  out: ActiveStrategyTransformOutFunction\n}\n\nexport const independentActiveStrategy = (mandatory?: boolean): ActiveStrategy => {\n  const strategy: ActiveStrategy = {\n    activate: ({ id, value, activated }) => {\n      id = toRaw(id)\n\n      // When mandatory and we're trying to deselect when id\n      // is the only currently selected item then do nothing\n      if (mandatory && !value && activated.size === 1 && activated.has(id)) return activated\n\n      if (value) {\n        activated.add(id)\n      } else {\n        activated.delete(id)\n      }\n\n      return activated\n    },\n    in: (v, children, parents) => {\n      let set = new Set()\n\n      if (v != null) {\n        for (const id of wrapInArray(v)) {\n          set = strategy.activate({\n            id,\n            value: true,\n            activated: new Set(set),\n            children,\n            parents,\n          })\n        }\n      }\n\n      return set\n    },\n    out: v => {\n      return Array.from(v)\n    },\n  }\n\n  return strategy\n}\n\nexport const independentSingleActiveStrategy = (mandatory?: boolean): ActiveStrategy => {\n  const parentStrategy = independentActiveStrategy(mandatory)\n\n  const strategy: ActiveStrategy = {\n    activate: ({ activated, id, ...rest }) => {\n      id = toRaw(id)\n      const singleSelected = activated.has(id) ? new Set([id]) : new Set()\n      return parentStrategy.activate({ ...rest, id, activated: singleSelected })\n    },\n    in: (v, children, parents) => {\n      let set = new Set()\n\n      if (v != null) {\n        const arr = wrapInArray(v)\n        if (arr.length) {\n          set = parentStrategy.in(arr.slice(0, 1), children, parents)\n        }\n      }\n\n      return set\n    },\n    out: (v, children, parents) => {\n      return parentStrategy.out(v, children, parents)\n    },\n  }\n\n  return strategy\n}\n\nexport const leafActiveStrategy = (mandatory?: boolean): ActiveStrategy => {\n  const parentStrategy = independentActiveStrategy(mandatory)\n\n  const strategy: ActiveStrategy = {\n    activate: ({ id, activated, children, ...rest }) => {\n      id = toRaw(id)\n      if (children.has(id)) return activated\n\n      return parentStrategy.activate({ id, activated, children, ...rest })\n    },\n    in: parentStrategy.in,\n    out: parentStrategy.out,\n  }\n\n  return strategy\n}\n\nexport const leafSingleActiveStrategy = (mandatory?: boolean): ActiveStrategy => {\n  const parentStrategy = independentSingleActiveStrategy(mandatory)\n\n  const strategy: ActiveStrategy = {\n    activate: ({ id, activated, children, ...rest }) => {\n      id = toRaw(id)\n      if (children.has(id)) return activated\n\n      return parentStrategy.activate({ id, activated, children, ...rest })\n    },\n    in: parentStrategy.in,\n    out: parentStrategy.out,\n  }\n\n  return strategy\n}\n", "type OpenStrategyFunction = (data: {\n  id: unknown\n  value: boolean\n  opened: Set<unknown>\n  children: Map<unknown, unknown[]>\n  parents: Map<unknown, unknown>\n  event?: Event\n}) => Set<unknown>\n\ntype OpenSelectStrategyFunction = (data: {\n  id: unknown\n  value: boolean\n  opened: Set<unknown>\n  selected: Map<unknown, 'on' | 'off' | 'indeterminate'>\n  children: Map<unknown, unknown[]>\n  parents: Map<unknown, unknown>\n  event?: Event\n}) => Set<unknown> | null\n\nexport type OpenStrategy = {\n  open: OpenStrategyFunction\n  select: OpenSelectStrategyFunction\n}\n\nexport const singleOpenStrategy: OpenStrategy = {\n  open: ({ id, value, opened, parents }) => {\n    if (value) {\n      const newOpened = new Set<unknown>()\n      newOpened.add(id)\n\n      let parent = parents.get(id)\n\n      while (parent != null) {\n        newOpened.add(parent)\n        parent = parents.get(parent)\n      }\n\n      return newOpened\n    } else {\n      opened.delete(id)\n      return opened\n    }\n  },\n  select: () => null,\n}\n\nexport const multipleOpenStrategy: OpenStrategy = {\n  open: ({ id, value, opened, parents }) => {\n    if (value) {\n      let parent = parents.get(id)\n      opened.add(id)\n\n      while (parent != null && parent !== id) {\n        opened.add(parent)\n        parent = parents.get(parent)\n      }\n\n      return opened\n    } else {\n      opened.delete(id)\n    }\n    return opened\n  },\n  select: () => null,\n}\n\nexport const listOpenStrategy: OpenStrategy = {\n  open: multipleOpenStrategy.open,\n  select: ({ id, value, opened, parents }) => {\n    if (!value) return opened\n\n    const path: unknown[] = []\n\n    let parent = parents.get(id)\n\n    while (parent != null) {\n      path.push(parent)\n      parent = parents.get(parent)\n    }\n\n    return new Set(path)\n  },\n}\n", "/* eslint-disable sonarjs/no-identical-functions */\n// Utilities\nimport { toRaw } from 'vue'\n\ntype SelectStrategyFunction = (data: {\n  id: unknown\n  value: boolean\n  selected: Map<unknown, 'on' | 'off' | 'indeterminate'>\n  children: Map<unknown, unknown[]>\n  parents: Map<unknown, unknown>\n  event?: Event\n}) => Map<unknown, 'on' | 'off' | 'indeterminate'>\n\ntype SelectStrategyTransformInFunction = (\n  v: readonly unknown[] | undefined,\n  children: Map<unknown, unknown[]>,\n  parents: Map<unknown, unknown>,\n) => Map<unknown, 'on' | 'off' | 'indeterminate'>\n\ntype SelectStrategyTransformOutFunction = (\n  v: Map<unknown, 'on' | 'off' | 'indeterminate'>,\n  children: Map<unknown, unknown[]>,\n  parents: Map<unknown, unknown>,\n) => unknown[]\n\nexport type SelectStrategy = {\n  select: SelectStrategyFunction\n  in: SelectStrategyTransformInFunction\n  out: SelectStrategyTransformOutFunction\n}\n\nexport const independentSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const strategy: SelectStrategy = {\n    select: ({ id, value, selected }) => {\n      id = toRaw(id)\n\n      // When mandatory and we're trying to deselect when id\n      // is the only currently selected item then do nothing\n      if (mandatory && !value) {\n        const on = Array.from(selected.entries())\n          .reduce((arr, [key, value]) => {\n            if (value === 'on') arr.push(key)\n            return arr\n          }, [] as unknown[])\n        if (on.length === 1 && on[0] === id) return selected\n      }\n\n      selected.set(id, value ? 'on' : 'off')\n\n      return selected\n    },\n    in: (v, children, parents) => {\n      const map = new Map()\n\n      for (const id of (v || [])) {\n        strategy.select({\n          id,\n          value: true,\n          selected: map,\n          children,\n          parents,\n        })\n      }\n\n      return map\n    },\n    out: v => {\n      const arr = []\n\n      for (const [key, value] of v.entries()) {\n        if (value === 'on') arr.push(key)\n      }\n\n      return arr\n    },\n  }\n\n  return strategy\n}\n\nexport const independentSingleSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const parentStrategy = independentSelectStrategy(mandatory)\n\n  const strategy: SelectStrategy = {\n    select: ({ selected, id, ...rest }) => {\n      id = toRaw(id)\n      const singleSelected = selected.has(id) ? new Map([[id, selected.get(id)!]]) : new Map()\n      return parentStrategy.select({ ...rest, id, selected: singleSelected })\n    },\n    in: (v, children, parents) => {\n      if (v?.length) {\n        return parentStrategy.in(v.slice(0, 1), children, parents)\n      }\n\n      return new Map()\n    },\n    out: (v, children, parents) => {\n      return parentStrategy.out(v, children, parents)\n    },\n  }\n\n  return strategy\n}\n\nexport const leafSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const parentStrategy = independentSelectStrategy(mandatory)\n\n  const strategy: SelectStrategy = {\n    select: ({ id, selected, children, ...rest }) => {\n      id = toRaw(id)\n      if (children.has(id)) return selected\n\n      return parentStrategy.select({ id, selected, children, ...rest })\n    },\n    in: parentStrategy.in,\n    out: parentStrategy.out,\n  }\n\n  return strategy\n}\n\nexport const leafSingleSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const parentStrategy = independentSingleSelectStrategy(mandatory)\n\n  const strategy: SelectStrategy = {\n    select: ({ id, selected, children, ...rest }) => {\n      id = toRaw(id)\n      if (children.has(id)) return selected\n\n      return parentStrategy.select({ id, selected, children, ...rest })\n    },\n    in: parentStrategy.in,\n    out: parentStrategy.out,\n  }\n\n  return strategy\n}\n\nexport const classicSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const strategy: SelectStrategy = {\n    select: ({ id, value, selected, children, parents }) => {\n      id = toRaw(id)\n      const original = new Map(selected)\n\n      const items = [id]\n\n      while (items.length) {\n        const item = items.shift()!\n\n        selected.set(toRaw(item), value ? 'on' : 'off')\n\n        if (children.has(item)) {\n          items.push(...children.get(item)!)\n        }\n      }\n\n      let parent = toRaw(parents.get(id))\n\n      while (parent) {\n        const childrenIds = children.get(parent)!\n        const everySelected = childrenIds.every(cid => selected.get(toRaw(cid)) === 'on')\n        const noneSelected = childrenIds.every(cid => !selected.has(toRaw(cid)) || selected.get(toRaw(cid)) === 'off')\n\n        selected.set(parent, everySelected ? 'on' : noneSelected ? 'off' : 'indeterminate')\n\n        parent = toRaw(parents.get(parent))\n      }\n\n      // If mandatory and planned deselect results in no selected\n      // items then we can't do it, so return original state\n      if (mandatory && !value) {\n        const on = Array.from(selected.entries())\n          .reduce((arr, [key, value]) => {\n            if (value === 'on') arr.push(key)\n            return arr\n          }, [] as unknown[])\n        if (on.length === 0) return original\n      }\n\n      return selected\n    },\n    in: (v, children, parents) => {\n      let map = new Map()\n\n      for (const id of (v || [])) {\n        map = strategy.select({\n          id,\n          value: true,\n          selected: map,\n          children,\n          parents,\n        })\n      }\n\n      return map\n    },\n    out: (v, children) => {\n      const arr = []\n\n      for (const [key, value] of v.entries()) {\n        if (value === 'on' && !children.has(key)) arr.push(key)\n      }\n\n      return arr\n    },\n  }\n\n  return strategy\n}\n\nexport const trunkSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const parentStrategy = classicSelectStrategy(mandatory)\n\n  const strategy: SelectStrategy = {\n    select: parentStrategy.select,\n    in: parentStrategy.in,\n    out: (v, children, parents) => {\n      const arr = []\n\n      for (const [key, value] of v.entries()) {\n        if (value === 'on') {\n          if (parents.has(key)) {\n            const parent = parents.get(key)\n            if (v.get(parent) === 'on') continue\n          }\n          arr.push(key)\n        }\n      }\n\n      return arr\n    },\n  }\n\n  return strategy\n}\n", "// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport {\n  computed,\n  inject,\n  onBeforeMount,\n  onBeforeUnmount,\n  provide,\n  ref,\n  shallowRef,\n  toRaw,\n  toRef, toValue,\n} from 'vue'\nimport {\n  independentActiveStrategy,\n  independentSingleActiveStrategy,\n  leafActiveStrategy,\n  leafSingleActiveStrategy,\n} from './activeStrategies'\nimport { listOpenStrategy, multipleOpenStrategy, singleOpenStrategy } from './openStrategies'\nimport {\n  classicSelectStrategy,\n  independentSelectStrategy,\n  independentSingleSelectStrategy,\n  leafSelectStrategy,\n  leafSingleSelectStrategy,\n  trunkSelectStrategy,\n} from './selectStrategies'\nimport { consoleError, getCurrentInstance, propsFactory } from '@/util'\n\n// Types\nimport type { InjectionKey, MaybeRefOrGetter, PropType, Ref } from 'vue'\nimport type { ActiveStrategy } from './activeStrategies'\nimport type { OpenStrategy } from './openStrategies'\nimport type { SelectStrategy } from './selectStrategies'\nimport type { EventProp } from '@/util'\n\nexport type ActiveStrategyProp =\n  | 'single-leaf'\n  | 'leaf'\n  | 'independent'\n  | 'single-independent'\n  | ActiveStrategy\n  | ((mandatory: boolean) => ActiveStrategy)\nexport type SelectStrategyProp =\n  | 'single-leaf'\n  | 'leaf'\n  | 'independent'\n  | 'single-independent'\n  | 'classic'\n  | 'trunk'\n  | SelectStrategy\n  | ((mandatory: boolean) => SelectStrategy)\nexport type OpenStrategyProp = 'single' | 'multiple' | 'list' | OpenStrategy\n\nexport interface NestedProps {\n  activatable: boolean\n  selectable: boolean\n  activeStrategy: ActiveStrategyProp | undefined\n  selectStrategy: SelectStrategyProp | undefined\n  openStrategy: OpenStrategyProp | undefined\n  activated: any\n  selected: any\n  opened: any\n  mandatory: boolean\n  'onUpdate:activated': EventProp<[any]> | undefined\n  'onUpdate:selected': EventProp<[any]> | undefined\n  'onUpdate:opened': EventProp<[any]> | undefined\n}\n\ntype NestedProvide = {\n  id: Ref<unknown>\n  isGroupActivator?: boolean\n  root: {\n    children: Ref<Map<unknown, unknown[]>>\n    parents: Ref<Map<unknown, unknown>>\n    activatable: Ref<boolean>\n    selectable: Ref<boolean>\n    opened: Ref<Set<unknown>>\n    activated: Ref<Set<unknown>>\n    selected: Ref<Map<unknown, 'on' | 'off' | 'indeterminate'>>\n    selectedValues: Ref<unknown[]>\n    register: (id: unknown, parentId: unknown, isGroup?: boolean) => void\n    unregister: (id: unknown) => void\n    open: (id: unknown, value: boolean, event?: Event) => void\n    activate: (id: unknown, value: boolean, event?: Event) => void\n    select: (id: unknown, value: boolean, event?: Event) => void\n    openOnSelect: (id: unknown, value: boolean, event?: Event) => void\n    getPath: (id: unknown) => unknown[]\n  }\n}\n\nexport const VNestedSymbol: InjectionKey<NestedProvide> = Symbol.for('vuetify:nested')\n\nexport const emptyNested: NestedProvide = {\n  id: shallowRef(),\n  root: {\n    register: () => null,\n    unregister: () => null,\n    parents: ref(new Map()),\n    children: ref(new Map()),\n    open: () => null,\n    openOnSelect: () => null,\n    activate: () => null,\n    select: () => null,\n    activatable: ref(false),\n    selectable: ref(false),\n    opened: ref(new Set()),\n    activated: ref(new Set()),\n    selected: ref(new Map()),\n    selectedValues: ref([]),\n    getPath: () => [],\n  },\n}\n\nexport const makeNestedProps = propsFactory({\n  activatable: Boolean,\n  selectable: Boolean,\n  activeStrategy: [String, Function, Object] as PropType<ActiveStrategyProp>,\n  selectStrategy: [String, Function, Object] as PropType<SelectStrategyProp>,\n  openStrategy: [String, Object] as PropType<OpenStrategyProp>,\n  opened: null,\n  activated: null,\n  selected: null,\n  mandatory: Boolean,\n}, 'nested')\n\nexport const useNested = (props: NestedProps) => {\n  let isUnmounted = false\n  const children = ref(new Map<unknown, unknown[]>())\n  const parents = ref(new Map<unknown, unknown>())\n\n  const opened = useProxiedModel(props, 'opened', props.opened, v => new Set(v), v => [...v.values()])\n\n  const activeStrategy = computed(() => {\n    if (typeof props.activeStrategy === 'object') return props.activeStrategy\n    if (typeof props.activeStrategy === 'function') return props.activeStrategy(props.mandatory)\n\n    switch (props.activeStrategy) {\n      case 'leaf': return leafActiveStrategy(props.mandatory)\n      case 'single-leaf': return leafSingleActiveStrategy(props.mandatory)\n      case 'independent': return independentActiveStrategy(props.mandatory)\n      case 'single-independent':\n      default: return independentSingleActiveStrategy(props.mandatory)\n    }\n  })\n\n  const selectStrategy = computed(() => {\n    if (typeof props.selectStrategy === 'object') return props.selectStrategy\n    if (typeof props.selectStrategy === 'function') return props.selectStrategy(props.mandatory)\n\n    switch (props.selectStrategy) {\n      case 'single-leaf': return leafSingleSelectStrategy(props.mandatory)\n      case 'leaf': return leafSelectStrategy(props.mandatory)\n      case 'independent': return independentSelectStrategy(props.mandatory)\n      case 'single-independent': return independentSingleSelectStrategy(props.mandatory)\n      case 'trunk': return trunkSelectStrategy(props.mandatory)\n      case 'classic':\n      default: return classicSelectStrategy(props.mandatory)\n    }\n  })\n\n  const openStrategy = computed(() => {\n    if (typeof props.openStrategy === 'object') return props.openStrategy\n\n    switch (props.openStrategy) {\n      case 'list': return listOpenStrategy\n      case 'single': return singleOpenStrategy\n      case 'multiple':\n      default: return multipleOpenStrategy\n    }\n  })\n\n  const activated = useProxiedModel(\n    props,\n    'activated',\n    props.activated,\n    v => activeStrategy.value.in(v, children.value, parents.value),\n    v => activeStrategy.value.out(v, children.value, parents.value),\n  )\n  const selected = useProxiedModel(\n    props,\n    'selected',\n    props.selected,\n    v => selectStrategy.value.in(v, children.value, parents.value),\n    v => selectStrategy.value.out(v, children.value, parents.value),\n  )\n\n  onBeforeUnmount(() => {\n    isUnmounted = true\n  })\n\n  function getPath (id: unknown) {\n    const path: unknown[] = []\n    let parent: unknown = id\n\n    while (parent != null) {\n      path.unshift(parent)\n      parent = parents.value.get(parent)\n    }\n\n    return path\n  }\n\n  const vm = getCurrentInstance('nested')\n\n  const nodeIds = new Set<unknown>()\n\n  const nested: NestedProvide = {\n    id: shallowRef(),\n    root: {\n      opened,\n      activatable: toRef(() => props.activatable),\n      selectable: toRef(() => props.selectable),\n      activated,\n      selected,\n      selectedValues: computed(() => {\n        const arr = []\n\n        for (const [key, value] of selected.value.entries()) {\n          if (value === 'on') arr.push(key)\n        }\n\n        return arr\n      }),\n      register: (id, parentId, isGroup) => {\n        if (nodeIds.has(id)) {\n          const path = getPath(id).map(String).join(' -> ')\n          const newPath = getPath(parentId).concat(id).map(String).join(' -> ')\n          consoleError(`Multiple nodes with the same ID\\n\\t${path}\\n\\t${newPath}`)\n          return\n        } else {\n          nodeIds.add(id)\n        }\n\n        parentId && id !== parentId && parents.value.set(id, parentId)\n\n        isGroup && children.value.set(id, [])\n\n        if (parentId != null) {\n          children.value.set(parentId, [...children.value.get(parentId) || [], id])\n        }\n      },\n      unregister: id => {\n        if (isUnmounted) return\n\n        nodeIds.delete(id)\n        children.value.delete(id)\n        const parent = parents.value.get(id)\n        if (parent) {\n          const list = children.value.get(parent) ?? []\n          children.value.set(parent, list.filter(child => child !== id))\n        }\n        parents.value.delete(id)\n      },\n      open: (id, value, event) => {\n        vm.emit('click:open', { id, value, path: getPath(id), event })\n\n        const newOpened = openStrategy.value.open({\n          id,\n          value,\n          opened: new Set(opened.value),\n          children: children.value,\n          parents: parents.value,\n          event,\n        })\n\n        newOpened && (opened.value = newOpened)\n      },\n      openOnSelect: (id, value, event) => {\n        const newOpened = openStrategy.value.select({\n          id,\n          value,\n          selected: new Map(selected.value),\n          opened: new Set(opened.value),\n          children: children.value,\n          parents: parents.value,\n          event,\n        })\n        newOpened && (opened.value = newOpened)\n      },\n      select: (id, value, event) => {\n        vm.emit('click:select', { id, value, path: getPath(id), event })\n\n        const newSelected = selectStrategy.value.select({\n          id,\n          value,\n          selected: new Map(selected.value),\n          children: children.value,\n          parents: parents.value,\n          event,\n        })\n        newSelected && (selected.value = newSelected)\n\n        nested.root.openOnSelect(id, value, event)\n      },\n      activate: (id, value, event) => {\n        if (!props.activatable) {\n          return nested.root.select(id, true, event)\n        }\n\n        vm.emit('click:activate', { id, value, path: getPath(id), event })\n\n        const newActivated = activeStrategy.value.activate({\n          id,\n          value,\n          activated: new Set(activated.value),\n          children: children.value,\n          parents: parents.value,\n          event,\n        })\n\n        if (newActivated.size !== activated.value.size) {\n          activated.value = newActivated\n        } else {\n          for (const value of newActivated) {\n            if (!activated.value.has(value)) {\n              activated.value = newActivated\n              return\n            }\n          }\n          for (const value of activated.value) {\n            if (!newActivated.has(value)) {\n              activated.value = newActivated\n              return\n            }\n          }\n        }\n      },\n      children,\n      parents,\n      getPath,\n    },\n  }\n\n  provide(VNestedSymbol, nested)\n\n  return nested.root\n}\n\nexport const useNestedItem = (id: MaybeRefOrGetter<unknown>, isGroup: boolean) => {\n  const parent = inject(VNestedSymbol, emptyNested)\n\n  const uidSymbol = Symbol('nested item')\n  const computedId = computed(() => toValue(id) ?? uidSymbol)\n\n  const item = {\n    ...parent,\n    id: computedId,\n    open: (open: boolean, e: Event) => parent.root.open(computedId.value, open, e),\n    openOnSelect: (open: boolean, e?: Event) => parent.root.openOnSelect(computedId.value, open, e),\n    isOpen: computed(() => parent.root.opened.value.has(computedId.value)),\n    parent: computed(() => parent.root.parents.value.get(computedId.value)),\n    activate: (activated: boolean, e?: Event) => parent.root.activate(computedId.value, activated, e),\n    isActivated: computed(() => parent.root.activated.value.has(toRaw(computedId.value))),\n    select: (selected: boolean, e?: Event) => parent.root.select(computedId.value, selected, e),\n    isSelected: computed(() => parent.root.selected.value.get(toRaw(computedId.value)) === 'on'),\n    isIndeterminate: computed(() => parent.root.selected.value.get(toRaw(computedId.value)) === 'indeterminate'),\n    isLeaf: computed(() => !parent.root.children.value.get(computedId.value)),\n    isGroupActivator: parent.isGroupActivator,\n  }\n\n  onBeforeMount(() => {\n    !parent.isGroupActivator && parent.root.register(computedId.value, parent.id.value, isGroup)\n  })\n\n  onBeforeUnmount(() => {\n    !parent.isGroupActivator && parent.root.unregister(computedId.value)\n  })\n\n  isGroup && provide(VNestedSymbol, item)\n\n  return item\n}\n\nexport const useNestedGroupActivator = () => {\n  const parent = inject(VNestedSymbol, emptyNested)\n\n  provide(VNestedSymbol, { ...parent, isGroupActivator: true })\n}\n", "// Components\nimport { VExpandTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\n\n// Composables\nimport { useList } from './list'\nimport { makeComponentProps } from '@/composables/component'\nimport { IconValue } from '@/composables/icons'\nimport { useNestedGroupActivator, useNestedItem } from '@/composables/nested/nested'\nimport { useSsrBoot } from '@/composables/ssrBoot'\nimport { makeTagProps } from '@/composables/tag'\nimport { MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport { computed } from 'vue'\nimport { defineComponent, genericComponent, propsFactory, useRender } from '@/util'\n\nexport type VListGroupSlots = {\n  default: never\n  activator: { isOpen: boolean, props: Record<string, unknown> }\n}\n\nconst VListGroupActivator = defineComponent({\n  name: 'VListGroupActivator',\n\n  setup (_, { slots }) {\n    useNestedGroupActivator()\n\n    return () => slots.default?.()\n  },\n})\n\nexport const makeVListGroupProps = propsFactory({\n  /* @deprecated */\n  activeColor: String,\n  baseColor: String,\n  color: String,\n  collapseIcon: {\n    type: IconValue,\n    default: '$collapse',\n  },\n  expandIcon: {\n    type: IconValue,\n    default: '$expand',\n  },\n  rawId: [String, Number],\n  prependIcon: IconValue,\n  appendIcon: IconValue,\n  fluid: Boolean,\n  subgroup: Boolean,\n  title: String,\n  value: null,\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VListGroup')\n\nexport const VListGroup = genericComponent<VListGroupSlots>()({\n  name: 'VListGroup',\n\n  props: makeVListGroupProps(),\n\n  setup (props, { slots }) {\n    const { isOpen, open, id: _id } = useNestedItem(() => props.value, true)\n    const id = computed(() => `v-list-group--id-${String(props.rawId ?? _id.value)}`)\n    const list = useList()\n    const { isBooted } = useSsrBoot()\n\n    function onClick (e: Event) {\n      if (['INPUT', 'TEXTAREA'].includes((e.target as Element)?.tagName)) return\n      open(!isOpen.value, e)\n    }\n\n    const activatorProps = computed(() => ({\n      onClick,\n      class: 'v-list-group__header',\n      id: id.value,\n    }))\n\n    const toggleIcon = computed(() => isOpen.value ? props.collapseIcon : props.expandIcon)\n    const activatorDefaults = computed(() => ({\n      VListItem: {\n        active: isOpen.value,\n        activeColor: props.activeColor,\n        baseColor: props.baseColor,\n        color: props.color,\n        prependIcon: props.prependIcon || (props.subgroup && toggleIcon.value),\n        appendIcon: props.appendIcon || (!props.subgroup && toggleIcon.value),\n        title: props.title,\n        value: props.value,\n      },\n    }))\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-list-group',\n          {\n            'v-list-group--prepend': list?.hasPrepend.value,\n            'v-list-group--fluid': props.fluid,\n            'v-list-group--subgroup': props.subgroup,\n            'v-list-group--open': isOpen.value,\n          },\n          props.class,\n        ]}\n        style={ props.style }\n      >\n        { slots.activator && (\n          <VDefaultsProvider defaults={ activatorDefaults.value }>\n            <VListGroupActivator>\n              { slots.activator({ props: activatorProps.value, isOpen: isOpen.value }) }\n            </VListGroupActivator>\n          </VDefaultsProvider>\n        )}\n\n        <MaybeTransition transition={{ component: VExpandTransition }} disabled={ !isBooted.value }>\n          <div class=\"v-list-group__items\" role=\"group\" aria-labelledby={ id.value } v-show={ isOpen.value }>\n            { slots.default?.() }\n          </div>\n        </MaybeTransition>\n      </props.tag>\n    ))\n\n    return {\n      isOpen,\n    }\n  },\n})\n\nexport type VListGroup = InstanceType<typeof VListGroup>\n", "// Styles\nimport './VListItem.sass'\n\n// Components\nimport { VListItemSubtitle } from './VListItemSubtitle'\nimport { VListItemTitle } from './VListItemTitle'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { useList } from './list'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { IconValue } from '@/composables/icons'\nimport { useNestedItem } from '@/composables/nested/nested'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Directives\nimport vRipple from '@/directives/ripple'\n\n// Utilities\nimport { computed, onBeforeMount, toDisplayString, toRef, watch } from 'vue'\nimport { deprecate, EventProp, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\n\nexport type ListItemSlot = {\n  isActive: boolean\n  isOpen: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  select: (value: boolean) => void\n}\n\nexport type ListItemTitleSlot = {\n  title?: string | number | boolean\n}\n\nexport type ListItemSubtitleSlot = {\n  subtitle?: string | number | boolean\n}\n\nexport type VListItemSlots = {\n  prepend: ListItemSlot\n  append: ListItemSlot\n  default: ListItemSlot\n  title: ListItemTitleSlot\n  subtitle: ListItemSubtitleSlot\n}\n\nexport const makeVListItemProps = propsFactory({\n  active: {\n    type: Boolean,\n    default: undefined,\n  },\n  activeClass: String,\n  /* @deprecated */\n  activeColor: String,\n  appendAvatar: String,\n  appendIcon: IconValue,\n  baseColor: String,\n  disabled: Boolean,\n  lines: [Boolean, String] as PropType<'one' | 'two' | 'three' | false>,\n  link: {\n    type: Boolean,\n    default: undefined,\n  },\n  nav: Boolean,\n  prependAvatar: String,\n  prependIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n  slim: Boolean,\n  subtitle: {\n    type: [String, Number, Boolean],\n    default: undefined,\n  },\n  title: {\n    type: [String, Number, Boolean],\n    default: undefined,\n  },\n  value: null,\n\n  onClick: EventProp<[MouseEvent | KeyboardEvent]>(),\n  onClickOnce: EventProp<[MouseEvent]>(),\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeRoundedProps(),\n  ...makeRouterProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'text' } as const),\n}, 'VListItem')\n\nexport const VListItem = genericComponent<VListItemSlots>()({\n  name: 'VListItem',\n\n  directives: { vRipple },\n\n  props: makeVListItemProps(),\n\n  emits: {\n    click: (e: MouseEvent | KeyboardEvent) => true,\n  },\n\n  setup (props, { attrs, slots, emit }) {\n    const link = useLink(props, attrs)\n    const id = computed(() => props.value === undefined ? link.href.value : props.value)\n    const {\n      activate,\n      isActivated,\n      select,\n      isOpen,\n      isSelected,\n      isIndeterminate,\n      isGroupActivator,\n      root,\n      parent,\n      openOnSelect,\n      id: uid,\n    } = useNestedItem(id, false)\n    const list = useList()\n    const isActive = computed(() =>\n      props.active !== false &&\n      (props.active || link.isActive?.value || (root.activatable.value ? isActivated.value : isSelected.value))\n    )\n    const isLink = toRef(() => props.link !== false && link.isLink.value)\n    const isSelectable = computed(() => (!!list && (root.selectable.value || root.activatable.value || props.value != null)))\n    const isClickable = computed(() =>\n      !props.disabled &&\n      props.link !== false &&\n      (props.link || link.isClickable.value || isSelectable.value)\n    )\n\n    const roundedProps = toRef(() => props.rounded || props.nav)\n    const color = toRef(() => props.color ?? props.activeColor)\n    const variantProps = toRef(() => ({\n      color: isActive.value ? color.value ?? props.baseColor : props.baseColor,\n      variant: props.variant,\n    }))\n\n    // useNestedItem doesn't call register until beforeMount,\n    // so this can't be an immediate watcher as we don't know parent yet\n    watch(() => link.isActive?.value, val => {\n      if (!val) return\n      handleActiveLink()\n    })\n    onBeforeMount(() => {\n      if (link.isActive?.value) handleActiveLink()\n    })\n    function handleActiveLink () {\n      if (parent.value != null) {\n        root.open(parent.value, true)\n      }\n      openOnSelect(true)\n    }\n\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(variantProps)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(roundedProps)\n    const lineClasses = toRef(() => props.lines ? `v-list-item--${props.lines}-line` : undefined)\n\n    const slotProps = computed(() => ({\n      isActive: isActive.value,\n      select,\n      isOpen: isOpen.value,\n      isSelected: isSelected.value,\n      isIndeterminate: isIndeterminate.value,\n    } satisfies ListItemSlot))\n\n    function onClick (e: MouseEvent) {\n      emit('click', e)\n      if (['INPUT', 'TEXTAREA'].includes((e.target as Element)?.tagName)) return\n\n      if (!isClickable.value) return\n\n      link.navigate?.(e)\n\n      if (isGroupActivator) return\n\n      if (root.activatable.value) {\n        activate(!isActivated.value, e)\n      } else if (root.selectable.value) {\n        select(!isSelected.value, e)\n      } else if (props.value != null) {\n        select(!isSelected.value, e)\n      }\n    }\n\n    function onKeyDown (e: KeyboardEvent) {\n      const target = e.target as HTMLElement\n\n      if (['INPUT', 'TEXTAREA'].includes(target.tagName)) return\n\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault()\n        e.target!.dispatchEvent(new MouseEvent('click', e))\n      }\n    }\n\n    useRender(() => {\n      const Tag = isLink.value ? 'a' : props.tag\n      const hasTitle = (slots.title || props.title != null)\n      const hasSubtitle = (slots.subtitle || props.subtitle != null)\n      const hasAppendMedia = !!(props.appendAvatar || props.appendIcon)\n      const hasAppend = !!(hasAppendMedia || slots.append)\n      const hasPrependMedia = !!(props.prependAvatar || props.prependIcon)\n      const hasPrepend = !!(hasPrependMedia || slots.prepend)\n\n      list?.updateHasPrepend(hasPrepend)\n\n      if (props.activeColor) {\n        deprecate('active-color', ['color', 'base-color'])\n      }\n\n      return (\n        <Tag\n          class={[\n            'v-list-item',\n            {\n              'v-list-item--active': isActive.value,\n              'v-list-item--disabled': props.disabled,\n              'v-list-item--link': isClickable.value,\n              'v-list-item--nav': props.nav,\n              'v-list-item--prepend': !hasPrepend && list?.hasPrepend.value,\n              'v-list-item--slim': props.slim,\n              [`${props.activeClass}`]: props.activeClass && isActive.value,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            lineClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n            props.class,\n          ]}\n          style={[\n            colorStyles.value,\n            dimensionStyles.value,\n            props.style,\n          ]}\n          tabindex={ isClickable.value ? (list ? -2 : 0) : undefined }\n          aria-selected={\n            isSelectable.value ? (\n              root.activatable.value ? isActivated.value\n              : root.selectable.value ? isSelected.value\n              : isActive.value\n            ) : undefined\n          }\n          onClick={ onClick }\n          onKeydown={ isClickable.value && !isLink.value && onKeyDown }\n          v-ripple={ isClickable.value && props.ripple }\n          { ...link.linkProps }\n        >\n          { genOverlays(isClickable.value || isActive.value, 'v-list-item') }\n\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-list-item__prepend\">\n              { !slots.prepend ? (\n                <>\n                  { props.prependAvatar && (\n                    <VAvatar\n                      key=\"prepend-avatar\"\n                      density={ props.density }\n                      image={ props.prependAvatar }\n                    />\n                  )}\n\n                  { props.prependIcon && (\n                    <VIcon\n                      key=\"prepend-icon\"\n                      density={ props.density }\n                      icon={ props.prependIcon }\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !hasPrependMedia }\n                  defaults={{\n                    VAvatar: {\n                      density: props.density,\n                      image: props.prependAvatar,\n                    },\n                    VIcon: {\n                      density: props.density,\n                      icon: props.prependIcon,\n                    },\n                    VListItemAction: {\n                      start: true,\n                    },\n                  }}\n                >\n                  { slots.prepend?.(slotProps.value) }\n                </VDefaultsProvider>\n              )}\n\n              <div class=\"v-list-item__spacer\" />\n            </div>\n          )}\n\n          <div class=\"v-list-item__content\" data-no-activator=\"\">\n            { hasTitle && (\n              <VListItemTitle key=\"title\">\n                { slots.title?.({ title: props.title }) ?? toDisplayString(props.title) }\n              </VListItemTitle>\n            )}\n\n            { hasSubtitle && (\n              <VListItemSubtitle key=\"subtitle\">\n                { slots.subtitle?.({ subtitle: props.subtitle }) ?? toDisplayString(props.subtitle) }\n              </VListItemSubtitle>\n            )}\n\n            { slots.default?.(slotProps.value) }\n          </div>\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-list-item__append\">\n              { !slots.append ? (\n                <>\n                  { props.appendIcon && (\n                    <VIcon\n                      key=\"append-icon\"\n                      density={ props.density }\n                      icon={ props.appendIcon }\n                    />\n                  )}\n\n                  { props.appendAvatar && (\n                    <VAvatar\n                      key=\"append-avatar\"\n                      density={ props.density }\n                      image={ props.appendAvatar }\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"append-defaults\"\n                  disabled={ !hasAppendMedia }\n                  defaults={{\n                    VAvatar: {\n                      density: props.density,\n                      image: props.appendAvatar,\n                    },\n                    VIcon: {\n                      density: props.density,\n                      icon: props.appendIcon,\n                    },\n                    VListItemAction: {\n                      end: true,\n                    },\n                  }}\n                >\n                  { slots.append?.(slotProps.value) }\n                </VDefaultsProvider>\n              )}\n\n              <div class=\"v-list-item__spacer\" />\n            </div>\n          )}\n        </Tag>\n      )\n    })\n\n    return {\n      activate,\n      isActivated,\n      isGroupActivator,\n      isSelected,\n      list,\n      select,\n      root,\n      id: uid,\n      link,\n    }\n  },\n})\n\nexport type VListItem = InstanceType<typeof VListItem>\n", "// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVListItemSubtitleProps = propsFactory({\n  opacity: [Number, String],\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VListItemSubtitle')\n\nexport const VListItemSubtitle = genericComponent()({\n  name: 'VListItemSubtitle',\n\n  props: makeVListItemSubtitleProps(),\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-list-item-subtitle',\n          props.class,\n        ]}\n        style={[\n          { '--v-list-item-subtitle-opacity': props.opacity },\n          props.style,\n        ]}\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VListItemSubtitle = InstanceType<typeof VListItemSubtitle>\n", "// Utilities\nimport { createSimpleFunctional } from '@/util'\n\nexport const VListItemTitle = createSimpleFunctional('v-list-item-title')\n\nexport type VListItemTitle = InstanceType<typeof VListItemTitle>\n", "// Composables\nimport { useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVListSubheaderProps = propsFactory({\n  color: String,\n  inset: Boolean,\n  sticky: Boolean,\n  title: String,\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VListSubheader')\n\nexport const VListSubheader = genericComponent()({\n  name: 'VListSubheader',\n\n  props: makeVListSubheaderProps(),\n\n  setup (props, { slots }) {\n    const { textColorClasses, textColorStyles } = useTextColor(() => props.color)\n\n    useRender(() => {\n      const hasText = !!(slots.default || props.title)\n\n      return (\n        <props.tag\n          class={[\n            'v-list-subheader',\n            {\n              'v-list-subheader--inset': props.inset,\n              'v-list-subheader--sticky': props.sticky,\n            },\n            textColorClasses.value,\n            props.class,\n          ]}\n          style={[\n            { textColorStyles },\n            props.style,\n          ]}\n        >\n          { hasText && (\n            <div class=\"v-list-subheader__text\">\n              { slots.default?.() ?? props.title }\n            </div>\n          )}\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VListSubheader = InstanceType<typeof VListSubheader>\n", "// Styles\nimport './VDivider.sass'\n\n// Composables\nimport { useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\ntype DividerKey = 'borderRightWidth' | 'borderTopWidth' | 'height' | 'width'\ntype DividerStyles = Partial<Record<DividerKey, string>>\n\nexport const makeVDividerProps = propsFactory({\n  color: String,\n  inset: Boolean,\n  length: [Number, String],\n  opacity: [Number, String],\n  thickness: [Number, String],\n  vertical: Boolean,\n\n  ...makeComponentProps(),\n  ...makeThemeProps(),\n}, 'VDivider')\n\nexport const VDivider = genericComponent()({\n  name: 'VDivider',\n\n  props: makeVDividerProps(),\n\n  setup (props, { attrs, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { textColorClasses, textColorStyles } = useTextColor(() => props.color)\n    const dividerStyles = computed(() => {\n      const styles: DividerStyles = {}\n\n      if (props.length) {\n        styles[props.vertical ? 'height' : 'width'] = convertToUnit(props.length)\n      }\n\n      if (props.thickness) {\n        styles[props.vertical ? 'borderRightWidth' : 'borderTopWidth'] = convertToUnit(props.thickness)\n      }\n\n      return styles\n    })\n\n    useRender(() => {\n      const divider = (\n        <hr\n          class={[\n            {\n              'v-divider': true,\n              'v-divider--inset': props.inset,\n              'v-divider--vertical': props.vertical,\n            },\n            themeClasses.value,\n            textColorClasses.value,\n            props.class,\n          ]}\n          style={[\n            dividerStyles.value,\n            textColorStyles.value,\n            { '--v-border-opacity': props.opacity },\n            props.style,\n          ]}\n          aria-orientation={\n            !attrs.role || attrs.role === 'separator'\n              ? props.vertical ? 'vertical' : 'horizontal'\n              : undefined\n          }\n          role={ `${attrs.role || 'separator'}` }\n        />\n      )\n\n      if (!slots.default) return divider\n\n      return (\n        <div\n          class={[\n            'v-divider__wrapper',\n            {\n              'v-divider__wrapper--vertical': props.vertical,\n              'v-divider__wrapper--inset': props.inset,\n            },\n          ]}\n        >\n          { divider }\n\n          <div class=\"v-divider__content\">\n            { slots.default() }\n          </div>\n\n          { divider }\n        </div>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VDivider = InstanceType<typeof VDivider>\n", "// Components\nimport { VListGroup } from './VListGroup'\nimport { VListItem } from './VListItem'\nimport { VListSubheader } from './VListSubheader'\nimport { VDivider } from '../VDivider'\n\n// Utilities\nimport { createList } from './list'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { InternalListItem } from './VList'\nimport type { VListItemSlots } from './VListItem'\nimport type { GenericProps } from '@/util'\n\nexport type VListChildrenSlots<T> = {\n  [K in keyof Omit<VListItemSlots, 'default'>]: VListItemSlots[K] & { item: T }\n} & {\n  default: never\n  item: { props: InternalListItem['props'] }\n  divider: { props: InternalListItem['props'] }\n  subheader: { props: InternalListItem['props'] }\n  header: { props: InternalListItem['props'] }\n}\n\nexport const makeVListChildrenProps = propsFactory({\n  items: Array as PropType<readonly InternalListItem[]>,\n  returnObject: Boolean,\n}, 'VListChildren')\n\nexport const VListChildren = genericComponent<new <T extends InternalListItem>(\n  props: {\n    items?: readonly T[]\n    returnObject?: boolean\n  },\n  slots: VListChildrenSlots<T>\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VListChildren',\n\n  props: makeVListChildrenProps(),\n\n  setup (props, { slots }) {\n    createList()\n\n    return () => slots.default?.() ?? props.items?.map(({ children, props: itemProps, type, raw: item }) => {\n      if (type === 'divider') {\n        return slots.divider?.({ props: itemProps }) ?? (\n          <VDivider { ...itemProps } />\n        )\n      }\n\n      if (type === 'subheader') {\n        return slots.subheader?.({ props: itemProps }) ?? (\n          <VListSubheader { ...itemProps } />\n        )\n      }\n\n      const slotsWithItem = {\n        subtitle: slots.subtitle ? (slotProps: any) => slots.subtitle?.({ ...slotProps, item }) : undefined,\n        prepend: slots.prepend ? (slotProps: any) => slots.prepend?.({ ...slotProps, item }) : undefined,\n        append: slots.append ? (slotProps: any) => slots.append?.({ ...slotProps, item }) : undefined,\n        title: slots.title ? (slotProps: any) => slots.title?.({ ...slotProps, item }) : undefined,\n      }\n\n      const listGroupProps = VListGroup.filterProps(itemProps)\n\n      return children ? (\n        <VListGroup\n          { ...listGroupProps }\n          value={ props.returnObject ? item : itemProps?.value }\n          rawId={ itemProps?.value }\n        >\n          {{\n            activator: ({ props: activatorProps }) => {\n              const listItemProps = {\n                ...itemProps,\n                ...activatorProps,\n                value: props.returnObject ? item : itemProps.value,\n              }\n\n              return slots.header\n                ? slots.header({ props: listItemProps })\n                : (\n                  <VListItem { ...listItemProps } v-slots={ slotsWithItem } />\n                )\n            },\n            default: () => (\n              <VListChildren\n                items={ children }\n                returnObject={ props.returnObject }\n                v-slots={ slots }\n              />\n            ),\n          }}\n        </VListGroup>\n      ) : (\n        slots.item ? slots.item({ props: itemProps }) : (\n          <VListItem\n            { ...itemProps }\n            value={ props.returnObject ? item : itemProps.value }\n            v-slots={ slotsWithItem }\n          />\n        )\n      )\n    })\n  },\n})\n", "// Utilities\nimport { computed, shallowRef, watchEffect } from 'vue'\nimport { deepEqual, getPropertyFromItem, isPrimitive, omit, pick, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { InternalItem } from '@/composables/filter'\nimport type { Primitive, SelectItemKey } from '@/util'\n\nexport interface ListItem<T = any> extends InternalItem<T> {\n  title: string\n  props: {\n    [key: string]: any\n    title: string\n    value: any\n  }\n  children?: ListItem<T>[]\n}\n\nexport interface ItemProps {\n  items: any[]\n  itemTitle: SelectItemKey\n  itemValue: SelectItemKey\n  itemChildren: SelectItemKey\n  itemProps: SelectItemKey\n  returnObject: boolean\n  valueComparator: typeof deepEqual | undefined\n}\n\n// Composables\nexport const makeItemsProps = propsFactory({\n  items: {\n    type: Array as PropType<ItemProps['items']>,\n    default: () => ([]),\n  },\n  itemTitle: {\n    type: [String, Array, Function] as PropType<SelectItemKey>,\n    default: 'title',\n  },\n  itemValue: {\n    type: [String, Array, Function] as PropType<SelectItemKey>,\n    default: 'value',\n  },\n  itemChildren: {\n    type: [Boolean, String, Array, Function] as PropType<SelectItemKey>,\n    default: 'children',\n  },\n  itemProps: {\n    type: [Boolean, String, Array, Function] as PropType<SelectItemKey>,\n    default: 'props',\n  },\n  returnObject: Boolean,\n  valueComparator: Function as PropType<typeof deepEqual>,\n}, 'list-items')\n\nexport function transformItem (props: Omit<ItemProps, 'items'>, item: any): ListItem {\n  const title = getPropertyFromItem(item, props.itemTitle, item)\n  const value = getPropertyFromItem(item, props.itemValue, title)\n  const children = getPropertyFromItem(item, props.itemChildren)\n  const itemProps = props.itemProps === true\n    ? typeof item === 'object' && item != null && !Array.isArray(item)\n      ? 'children' in item\n        ? omit(item, ['children'])\n        : item\n      : undefined\n    : getPropertyFromItem(item, props.itemProps)\n\n  const _props = {\n    title,\n    value,\n    ...itemProps,\n  }\n\n  return {\n    title: String(_props.title ?? ''),\n    value: _props.value,\n    props: _props,\n    children: Array.isArray(children) ? transformItems(props, children) : undefined,\n    raw: item,\n  }\n}\n\nexport function transformItems (props: Omit<ItemProps, 'items'>, items: ItemProps['items']) {\n  const _props = pick(props, [\n    'itemTitle',\n    'itemValue',\n    'itemChildren',\n    'itemProps',\n    'returnObject',\n    'valueComparator',\n  ])\n\n  const array: ListItem[] = []\n  for (const item of items) {\n    array.push(transformItem(_props, item))\n  }\n\n  return array\n}\n\nexport function useItems (props: ItemProps) {\n  const items = computed(() => transformItems(props, props.items))\n  const hasNullItem = computed(() => items.value.some(item => item.value === null))\n\n  const itemsMap = shallowRef<Map<Primitive, ListItem[]>>(new Map())\n  const keylessItems = shallowRef<ListItem[]>([])\n  watchEffect(() => {\n    const _items = items.value\n    const map = new Map()\n    const keyless = []\n    for (let i = 0; i < _items.length; i++) {\n      const item = _items[i]\n      if (isPrimitive(item.value) || item.value === null) {\n        let values = map.get(item.value)\n        if (!values) {\n          values = []\n          map.set(item.value, values)\n        }\n        values.push(item)\n      } else {\n        keyless.push(item)\n      }\n    }\n    itemsMap.value = map\n    keylessItems.value = keyless\n  })\n\n  function transformIn (value: any[]): ListItem[] {\n    // Cache unrefed values outside the loop,\n    // proxy getters can be slow when you call them a billion times\n    const _items = itemsMap.value\n    const _allItems = items.value\n    const _keylessItems = keylessItems.value\n    const _hasNullItem = hasNullItem.value\n    const _returnObject = props.returnObject\n    const hasValueComparator = !!props.valueComparator\n    const valueComparator = props.valueComparator || deepEqual\n    const _props = pick(props, [\n      'itemTitle',\n      'itemValue',\n      'itemChildren',\n      'itemProps',\n      'returnObject',\n      'valueComparator',\n    ])\n\n    const returnValue: ListItem[] = []\n    main: for (const v of value) {\n      // When the model value is null, return an InternalItem\n      // based on null only if null is one of the items\n      if (!_hasNullItem && v === null) continue\n\n      // String model value means value is a custom input value from combobox\n      // Don't look up existing items if the model value is a string\n      if (_returnObject && typeof v === 'string') {\n        returnValue.push(transformItem(_props, v))\n        continue\n      }\n\n      // Fast path, items with primitive values and no\n      // custom valueComparator can use a constant-time\n      // map lookup instead of searching the items array\n      const fastItems = _items.get(v)\n\n      // Slow path, always use valueComparator.\n      // This is O(n^2) so we really don't want to\n      // do it for more than a couple hundred items.\n      if (hasValueComparator || !fastItems) {\n        for (const item of (hasValueComparator ? _allItems : _keylessItems)) {\n          if (valueComparator(v, item.value)) {\n            returnValue.push(item)\n            continue main\n          }\n        }\n        // Not an existing item, construct it from the model (#4000)\n        returnValue.push(transformItem(_props, v))\n        continue\n      }\n\n      returnValue.push(...fastItems)\n    }\n\n    return returnValue\n  }\n\n  function transformOut (value: ListItem[]): any[] {\n    return props.returnObject\n      ? value.map(({ raw }) => raw)\n      : value.map(({ value }) => value)\n  }\n\n  return { items, transformIn, transformOut }\n}\n", "// Utilities\nimport { createSimpleFunctional } from '@/util'\n\nexport const VListImg = createSimpleFunctional('v-list-img')\n\nexport type VListImg = InstanceType<typeof VListImg>\n", "// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVListItemActionProps = propsFactory({\n  start: Boolean,\n  end: Boolean,\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VListItemAction')\n\nexport const VListItemAction = genericComponent()({\n  name: 'VListItemAction',\n\n  props: makeVListItemActionProps(),\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-list-item-action',\n          {\n            'v-list-item-action--start': props.start,\n            'v-list-item-action--end': props.end,\n          },\n          props.class,\n        ]}\n        style={ props.style }\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VListItemAction = InstanceType<typeof VListItemAction>\n", "// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVListItemMediaProps = propsFactory({\n  start: Boolean,\n  end: Boolean,\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VListItemMedia')\n\nexport const VListItemMedia = genericComponent()({\n  name: 'VListItemMedia',\n\n  props: makeVListItemMediaProps(),\n\n  setup (props, { slots }) {\n    useRender(() => {\n      return (\n        <props.tag\n          class={[\n            'v-list-item-media',\n            {\n              'v-list-item-media--start': props.start,\n              'v-list-item-media--end': props.end,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VListItemMedia = InstanceType<typeof VListItemMedia>\n", "// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VOverlay } from '@/components/VOverlay'\nimport { makeVOverlayProps } from '@/components/VOverlay/VOverlay'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useRtl } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\n\n// Utilities\nimport {\n  computed,\n  inject,\n  mergeProps,\n  nextTick,\n  onBeforeUnmount,\n  onDeactivated,\n  provide,\n  ref,\n  shallowRef, toRef,\n  useId,\n  watch,\n} from 'vue'\nimport { VMenuSymbol } from './shared'\nimport {\n  focusableChildren,\n  focusChild,\n  genericComponent,\n  getNextElement,\n  IN_BROWSER,\n  isClickInsideElement,\n  omit,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const makeVMenuProps = propsFactory({\n  // TODO\n  // disableKeys: Boolean,\n  id: String,\n  submenu: Boolean,\n\n  ...omit(makeVOverlayProps({\n    closeDelay: 250,\n    closeOnContentClick: true,\n    locationStrategy: 'connected' as const,\n    location: undefined,\n    openDelay: 300,\n    scrim: false,\n    scrollStrategy: 'reposition' as const,\n    transition: { component: VDialogTransition },\n  }), ['absolute']),\n}, 'VMenu')\n\nexport const VMenu = genericComponent<OverlaySlots>()({\n  name: 'VMenu',\n\n  props: makeVMenuProps(),\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n    const { isRtl } = useRtl()\n\n    const uid = useId()\n    const id = toRef(() => props.id || `v-menu-${uid}`)\n\n    const overlay = ref<VOverlay>()\n\n    const parent = inject(VMenuSymbol, null)\n    const openChildren = shallowRef(new Set<string>())\n    provide(VMenuSymbol, {\n      register () {\n        openChildren.value.add(uid)\n      },\n      unregister () {\n        openChildren.value.delete(uid)\n      },\n      closeParents (e) {\n        setTimeout(() => {\n          if (!openChildren.value.size &&\n            !props.persistent &&\n            (e == null || (overlay.value?.contentEl && !isClickInsideElement(e, overlay.value.contentEl)))\n          ) {\n            isActive.value = false\n            parent?.closeParents()\n          }\n        }, 40)\n      },\n    })\n\n    onBeforeUnmount(() => {\n      parent?.unregister()\n      document.removeEventListener('focusin', onFocusIn)\n    })\n    onDeactivated(() => isActive.value = false)\n\n    async function onFocusIn (e: FocusEvent) {\n      const before = e.relatedTarget as HTMLElement | null\n      const after = e.target as HTMLElement | null\n\n      await nextTick()\n\n      if (\n        isActive.value &&\n        before !== after &&\n        overlay.value?.contentEl &&\n        // We're the topmost menu\n        overlay.value?.globalTop &&\n        // It isn't the document or the menu body\n        ![document, overlay.value.contentEl].includes(after!) &&\n        // It isn't inside the menu body\n        !overlay.value.contentEl.contains(after)\n      ) {\n        const focusable = focusableChildren(overlay.value.contentEl)\n        focusable[0]?.focus()\n      }\n    }\n\n    watch(isActive, val => {\n      if (val) {\n        parent?.register()\n        if (IN_BROWSER) {\n          document.addEventListener('focusin', onFocusIn, { once: true })\n        }\n      } else {\n        parent?.unregister()\n        if (IN_BROWSER) {\n          document.removeEventListener('focusin', onFocusIn)\n        }\n      }\n    }, { immediate: true })\n\n    function onClickOutside (e: MouseEvent) {\n      parent?.closeParents(e)\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (props.disabled) return\n\n      if (e.key === 'Tab' || (e.key === 'Enter' && !props.closeOnContentClick)) {\n        if (\n          e.key === 'Enter' &&\n          ((e.target instanceof HTMLTextAreaElement) ||\n          (e.target instanceof HTMLInputElement && !!e.target.closest('form')))\n        ) return\n        if (e.key === 'Enter') e.preventDefault()\n\n        const nextElement = getNextElement(\n          focusableChildren(overlay.value?.contentEl as Element, false),\n          e.shiftKey ? 'prev' : 'next',\n          (el: HTMLElement) => el.tabIndex >= 0\n        )\n        if (!nextElement) {\n          isActive.value = false\n          overlay.value?.activatorEl?.focus()\n        }\n      } else if (props.submenu && e.key === (isRtl.value ? 'ArrowRight' : 'ArrowLeft')) {\n        isActive.value = false\n        overlay.value?.activatorEl?.focus()\n      }\n    }\n\n    function onActivatorKeydown (e: KeyboardEvent) {\n      if (props.disabled) return\n\n      const el = overlay.value?.contentEl\n      if (el && isActive.value) {\n        if (e.key === 'ArrowDown') {\n          e.preventDefault()\n          e.stopImmediatePropagation()\n          focusChild(el, 'next')\n        } else if (e.key === 'ArrowUp') {\n          e.preventDefault()\n          e.stopImmediatePropagation()\n          focusChild(el, 'prev')\n        } else if (props.submenu) {\n          if (e.key === (isRtl.value ? 'ArrowRight' : 'ArrowLeft')) {\n            isActive.value = false\n          } else if (e.key === (isRtl.value ? 'ArrowLeft' : 'ArrowRight')) {\n            e.preventDefault()\n            focusChild(el, 'first')\n          }\n        }\n      } else if (\n        props.submenu\n          ? e.key === (isRtl.value ? 'ArrowLeft' : 'ArrowRight')\n          : ['ArrowDown', 'ArrowUp'].includes(e.key)\n      ) {\n        isActive.value = true\n        e.preventDefault()\n        setTimeout(() => setTimeout(() => onActivatorKeydown(e)))\n      }\n    }\n\n    const activatorProps = computed(() =>\n      mergeProps({\n        'aria-haspopup': 'menu',\n        'aria-expanded': String(isActive.value),\n        'aria-controls': id.value,\n        onKeydown: onActivatorKeydown,\n      }, props.activatorProps)\n    )\n\n    useRender(() => {\n      const overlayProps = VOverlay.filterProps(props)\n\n      return (\n        <VOverlay\n          ref={ overlay }\n          id={ id.value }\n          class={[\n            'v-menu',\n            props.class,\n          ]}\n          style={ props.style }\n          { ...overlayProps }\n          v-model={ isActive.value }\n          absolute\n          activatorProps={ activatorProps.value }\n          location={ props.location ?? (props.submenu ? 'end' : 'bottom') }\n          onClick:outside={ onClickOutside }\n          onKeydown={ onKeydown }\n          { ...scopeId }\n        >\n          {{\n            activator: slots.activator,\n            default: (...args) => (\n              <VDefaultsProvider root=\"VMenu\">\n                { slots.default?.(...args) }\n              </VDefaultsProvider>\n            ),\n          }}\n        </VOverlay>\n      )\n    })\n\n    return forwardRefs({ id, Î¨openChildren: openChildren }, overlay)\n  },\n})\n\nexport type VMenu = InstanceType<typeof VMenu>\n", "// Types\nimport type { ComponentOptionsBase, ComponentPublicInstance, Ref, UnwrapRef } from 'vue'\nimport type { UnionToIntersection } from '@/util'\n\nconst Refs = Symbol('Forwarded refs')\n\n/** Omit properties starting with P */\ntype OmitPrefix<\n  T,\n  P extends string,\n  E = Extract<keyof T, `${P}${any}`>,\n> = [E] extends [never] ? T : Omit<T, `${P}${any}`>\ntype OmitPrivate<T> = OmitPrefix<T, '$'>\n\n/** Omit keyof $props from T */\ntype OmitProps<T> = T extends { $props: any } ? Omit<T, keyof T['$props']> : T\n\nfunction getDescriptor (obj: any, key: PropertyKey) {\n  let currentObj = obj\n  while (currentObj) {\n    const descriptor = Reflect.getOwnPropertyDescriptor(currentObj, key)\n    if (descriptor) return descriptor\n    currentObj = Object.getPrototypeOf(currentObj)\n  }\n  return undefined\n}\n\nexport function forwardRefs<\n  T extends {},\n  U extends Ref<HTMLElement | Omit<ComponentPublicInstance, '$emit' | '$slots'> | undefined>[],\n  UU = { [K in keyof U]: NonNullable<UnwrapRef<U[K]>> }[number],\n  UC = { [K in keyof U]: OmitPrivate<OmitProps<NonNullable<UnwrapRef<U[K]>>>> }[number],\n  R = T & UnionToIntersection<UC> & {\n    _allExposed: T | (\n      UU extends { $options: infer O }\n        ? O extends ComponentOptionsBase<any, infer E, any, any, any, any, any, any>\n          ? E\n          : never\n        : never\n    )\n  }\n> (target: T, ...refs: U): R {\n  (target as any)[Refs] = refs\n\n  return new Proxy(target, {\n    get (target, key) {\n      if (Reflect.has(target, key)) {\n        return Reflect.get(target, key)\n      }\n\n      // Skip internal properties\n      if (typeof key === 'symbol' || key.startsWith('$') || key.startsWith('__')) return\n\n      for (const ref of refs) {\n        if (ref.value && Reflect.has(ref.value, key)) {\n          const val = Reflect.get(ref.value, key)\n          return typeof val === 'function'\n            ? val.bind(ref.value)\n            : val\n        }\n      }\n    },\n    has (target, key) {\n      if (Reflect.has(target, key)) {\n        return true\n      }\n\n      // Skip internal properties\n      if (typeof key === 'symbol' || key.startsWith('$') || key.startsWith('__')) return false\n\n      for (const ref of refs) {\n        if (ref.value && Reflect.has(ref.value, key)) {\n          return true\n        }\n      }\n      return false\n    },\n    set (target, key, value) {\n      if (Reflect.has(target, key)) {\n        return Reflect.set(target, key, value)\n      }\n\n      // Skip internal properties\n      if (typeof key === 'symbol' || key.startsWith('$') || key.startsWith('__')) return false\n\n      for (const ref of refs) {\n        if (ref.value && Reflect.has(ref.value, key)) {\n          return Reflect.set(ref.value, key, value)\n        }\n      }\n\n      return false\n    },\n    getOwnPropertyDescriptor (target, key) {\n      const descriptor = Reflect.getOwnPropertyDescriptor(target, key)\n      if (descriptor) return descriptor\n\n      // Skip internal properties\n      if (typeof key === 'symbol' || key.startsWith('$') || key.startsWith('__')) return\n\n      // Check each ref's own properties\n      for (const ref of refs) {\n        if (!ref.value) continue\n        const descriptor = getDescriptor(ref.value, key) ?? ('_' in ref.value ? getDescriptor(ref.value._?.setupState, key) : undefined)\n        if (descriptor) return descriptor\n      }\n\n      // Recursive search up each ref's prototype\n      for (const ref of refs) {\n        const childRefs = ref.value && (ref.value as any)[Refs]\n        if (!childRefs) continue\n        const queue = childRefs.slice()\n        while (queue.length) {\n          const ref = queue.shift()\n          const descriptor = getDescriptor(ref.value, key)\n          if (descriptor) return descriptor\n          const childRefs = ref.value && (ref.value as any)[Refs]\n          if (childRefs) queue.push(...childRefs)\n        }\n      }\n\n      return undefined\n    },\n  }) as any\n}\n", "// Styles\nimport './VTextField.sass'\n\n// Components\nimport { VCounter } from '@/components/VCounter/VCounter'\nimport { makeVFieldProps, VField } from '@/components/VField/VField'\nimport { makeVInputProps, VInput } from '@/components/VInput/VInput'\n\n// Composables\nimport { useAutofocus } from '@/composables/autofocus'\nimport { useFocus } from '@/composables/focus'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Directives\nimport vIntersect from '@/directives/intersect'\n\n// Utilities\nimport { cloneVNode, computed, nextTick, ref } from 'vue'\nimport { callEvent, filterInputAttrs, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VCounterSlot } from '@/components/VCounter/VCounter'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\n\nconst activeTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month']\n\nexport const makeVTextFieldProps = propsFactory({\n  autofocus: Boolean,\n  counter: [Boolean, Number, String],\n  counterValue: [Number, Function] as PropType<number | ((value: any) => number)>,\n  prefix: String,\n  placeholder: String,\n  persistentPlaceholder: Boolean,\n  persistentCounter: Boolean,\n  suffix: String,\n  role: String,\n  type: {\n    type: String,\n    default: 'text',\n  },\n  modelModifiers: Object as PropType<Record<string, boolean>>,\n\n  ...makeVInputProps(),\n  ...makeVFieldProps(),\n}, 'VTextField')\n\nexport type VTextFieldSlots = Omit<VInputSlots & VFieldSlots, 'default'> & {\n  default: never\n  counter: VCounterSlot\n}\n\nexport const VTextField = genericComponent<VTextFieldSlots>()({\n  name: 'VTextField',\n\n  directives: { vIntersect },\n\n  inheritAttrs: false,\n\n  props: makeVTextFieldProps(),\n\n  emits: {\n    'click:control': (e: MouseEvent) => true,\n    'mousedown:control': (e: MouseEvent) => true,\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (val: string) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const { isFocused, focus, blur } = useFocus(props)\n    const { onIntersect } = useAutofocus(props)\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : (model.value ?? '').toString().length\n    })\n    const max = computed(() => {\n      if (attrs.maxlength) return attrs.maxlength as unknown as undefined\n\n      if (\n        !props.counter ||\n        (typeof props.counter !== 'number' &&\n        typeof props.counter !== 'string')\n      ) return undefined\n\n      return props.counter\n    })\n\n    const isPlainOrUnderlined = computed(() => ['plain', 'underlined'].includes(props.variant))\n\n    const vInputRef = ref<VInput>()\n    const vFieldRef = ref<VField>()\n    const inputRef = ref<HTMLInputElement>()\n    const isActive = computed(() => (\n      activeTypes.includes(props.type) ||\n      props.persistentPlaceholder ||\n      isFocused.value ||\n      props.active\n    ))\n    function onFocus () {\n      if (!isFocused.value) focus()\n\n      nextTick(() => {\n        if (inputRef.value !== document.activeElement) {\n          inputRef.value?.focus()\n        }\n      })\n    }\n    function onControlMousedown (e: MouseEvent) {\n      emit('mousedown:control', e)\n\n      if (e.target === inputRef.value) return\n\n      onFocus()\n      e.preventDefault()\n    }\n    function onControlClick (e: MouseEvent) {\n      emit('click:control', e)\n    }\n    function onClear (e: MouseEvent, reset: () => void) {\n      e.stopPropagation()\n\n      onFocus()\n\n      nextTick(() => {\n        model.value = null\n        reset()\n\n        callEvent(props['onClick:clear'], e)\n      })\n    }\n    function onInput (e: Event) {\n      const el = e.target as HTMLInputElement\n      model.value = el.value\n      if (\n        props.modelModifiers?.trim &&\n        ['text', 'search', 'password', 'tel', 'url'].includes(props.type)\n      ) {\n        const caretPosition = [el.selectionStart, el.selectionEnd]\n        nextTick(() => {\n          el.selectionStart = caretPosition[0]\n          el.selectionEnd = caretPosition[1]\n        })\n      }\n    }\n\n    useRender(() => {\n      const hasCounter = !!(slots.counter || (props.counter !== false && props.counter != null))\n      const hasDetails = !!(hasCounter || slots.details)\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n      const { modelValue: _, ...inputProps } = VInput.filterProps(props)\n      const fieldProps = VField.filterProps(props)\n\n      return (\n        <VInput\n          ref={ vInputRef }\n          v-model={ model.value }\n          class={[\n            'v-text-field',\n            {\n              'v-text-field--prefixed': props.prefix,\n              'v-text-field--suffixed': props.suffix,\n              'v-input--plain-underlined': isPlainOrUnderlined.value,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          { ...rootAttrs }\n          { ...inputProps }\n          centerAffix={ !isPlainOrUnderlined.value }\n          focused={ isFocused.value }\n        >\n          {{\n            ...slots,\n            default: ({\n              id,\n              isDisabled,\n              isDirty,\n              isReadonly,\n              isValid,\n              reset,\n            }) => (\n              <VField\n                ref={ vFieldRef }\n                onMousedown={ onControlMousedown }\n                onClick={ onControlClick }\n                onClick:clear={ (e: MouseEvent) => onClear(e, reset) }\n                onClick:prependInner={ props['onClick:prependInner'] }\n                onClick:appendInner={ props['onClick:appendInner'] }\n                role={ props.role }\n                { ...fieldProps }\n                id={ id.value }\n                active={ isActive.value || isDirty.value }\n                dirty={ isDirty.value || props.dirty }\n                disabled={ isDisabled.value }\n                focused={ isFocused.value }\n                error={ isValid.value === false }\n              >\n                {{\n                  ...slots,\n                  default: ({\n                    props: { class: fieldClass, ...slotProps },\n                  }) => {\n                    const inputNode = (\n                      <input\n                        ref={ inputRef }\n                        value={ model.value }\n                        onInput={ onInput }\n                        v-intersect={[{\n                          handler: onIntersect,\n                        }, null, ['once']]}\n                        autofocus={ props.autofocus }\n                        readonly={ isReadonly.value }\n                        disabled={ isDisabled.value }\n                        name={ props.name }\n                        placeholder={ props.placeholder }\n                        size={ 1 }\n                        type={ props.type }\n                        onFocus={ onFocus }\n                        onBlur={ blur }\n                        { ...slotProps }\n                        { ...inputAttrs }\n                      />\n                    )\n\n                    return (\n                      <>\n                        { props.prefix && (\n                          <span class=\"v-text-field__prefix\">\n                            <span class=\"v-text-field__prefix__text\">\n                              { props.prefix }\n                            </span>\n                          </span>\n                        )}\n\n                        { slots.default ? (\n                          <div\n                            class={ fieldClass }\n                            data-no-activator=\"\"\n                          >\n                            { slots.default() }\n                            { inputNode }\n                          </div>\n                        ) : cloneVNode(inputNode, { class: fieldClass })}\n\n                        { props.suffix && (\n                          <span class=\"v-text-field__suffix\">\n                            <span class=\"v-text-field__suffix__text\">\n                              { props.suffix }\n                            </span>\n                          </span>\n                        )}\n                      </>\n                    )\n                  },\n                }}\n              </VField>\n            ),\n            details: hasDetails ? slotProps => (\n              <>\n                { slots.details?.(slotProps) }\n\n                { hasCounter && (\n                  <>\n                    <span />\n\n                    <VCounter\n                      active={ props.persistentCounter || isFocused.value }\n                      value={ counterValue.value }\n                      max={ max.value }\n                      disabled={ props.disabled }\n                      v-slots:default={ slots.counter }\n                    />\n                  </>\n                )}\n              </>\n            ) : undefined,\n          }}\n        </VInput>\n      )\n    })\n\n    return forwardRefs({}, vInputRef, vFieldRef, inputRef)\n  },\n})\n\nexport type VTextField = InstanceType<typeof VTextField>\n", "// Styles\nimport './VCounter.sass'\n\n// Components\nimport { VSlideYTransition } from '@/components/transitions'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { Component } from 'vue'\n\nexport const makeVCounterProps = propsFactory({\n  active: Boolean,\n  disabled: Boolean,\n  max: [Number, String],\n  value: {\n    type: [Number, String],\n    default: 0,\n  },\n\n  ...makeComponentProps(),\n  ...makeTransitionProps({\n    transition: { component: VSlideYTransition as Component },\n  }),\n}, 'VCounter')\n\nexport type VCounterSlot = {\n  counter: string\n  max: string | number | undefined\n  value: string | number | undefined\n}\n\ntype VCounterSlots = {\n  default: VCounterSlot\n}\n\nexport const VCounter = genericComponent<VCounterSlots>()({\n  name: 'VCounter',\n\n  functional: true,\n\n  props: makeVCounterProps(),\n\n  setup (props, { slots }) {\n    const counter = toRef(() => {\n      return props.max ? `${props.value} / ${props.max}` : String(props.value)\n    })\n\n    useRender(() => (\n      <MaybeTransition transition={ props.transition }>\n        <div\n          v-show={ props.active }\n          class={[\n            'v-counter',\n            {\n              'text-error': props.max && !props.disabled &&\n                parseFloat(props.value) > parseFloat(props.max),\n            },\n            props.class,\n          ]}\n          style={ props.style }\n        >\n          { slots.default\n            ? slots.default({\n              counter: counter.value,\n              max: props.max,\n              value: props.value,\n            })\n            : counter.value\n          }\n        </div>\n      </MaybeTransition>\n    ))\n\n    return {}\n  },\n})\n\nexport type VCounter = InstanceType<typeof VCounter>\n", "// Styles\nimport './VField.sass'\n\n// Components\nimport { VFieldLabel } from './VFieldLabel'\nimport { VExpandXTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { useInputIcon } from '@/components/VInput/InputIcon'\n\n// Composables\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeFocusProps, useFocus } from '@/composables/focus'\nimport { IconValue } from '@/composables/icons'\nimport { LoaderSlot, makeLoaderProps, useLoader } from '@/composables/loader'\nimport { useRtl } from '@/composables/locale'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, ref, toRef, useId, watch } from 'vue'\nimport {\n  animate,\n  convertToUnit,\n  EventProp,\n  genericComponent,\n  nullifyTransforms,\n  propsFactory,\n  standardEasing,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { LoaderSlotProps } from '@/composables/loader'\nimport type { GenericProps } from '@/util'\n\nconst allowedVariants = ['underlined', 'outlined', 'filled', 'solo', 'solo-inverted', 'solo-filled', 'plain'] as const\ntype Variant = typeof allowedVariants[number]\n\nexport interface DefaultInputSlot {\n  isActive: Ref<boolean>\n  isFocused: Ref<boolean>\n  controlRef: Ref<HTMLElement | undefined>\n  focus: () => void\n  blur: () => void\n}\n\nexport interface VFieldSlot extends DefaultInputSlot {\n  props: Record<string, unknown>\n}\n\nexport const makeVFieldProps = propsFactory({\n  appendInnerIcon: IconValue,\n  bgColor: String,\n  clearable: Boolean,\n  clearIcon: {\n    type: IconValue,\n    default: '$clear',\n  },\n  active: Boolean,\n  centerAffix: {\n    type: Boolean,\n    default: undefined,\n  },\n  color: String,\n  baseColor: String,\n  dirty: Boolean,\n  disabled: {\n    type: Boolean,\n    default: null,\n  },\n  glow: Boolean,\n  error: Boolean,\n  flat: Boolean,\n  iconColor: [Boolean, String],\n  label: String,\n  persistentClear: Boolean,\n  prependInnerIcon: IconValue,\n  reverse: Boolean,\n  singleLine: Boolean,\n  variant: {\n    type: String as PropType<Variant>,\n    default: 'filled',\n    validator: (v: any) => allowedVariants.includes(v),\n  },\n\n  'onClick:clear': EventProp<[MouseEvent]>(),\n  'onClick:appendInner': EventProp<[MouseEvent]>(),\n  'onClick:prependInner': EventProp<[MouseEvent]>(),\n\n  ...makeComponentProps(),\n  ...makeLoaderProps(),\n  ...makeRoundedProps(),\n  ...makeThemeProps(),\n}, 'VField')\n\nexport type VFieldSlots = {\n  clear: DefaultInputSlot & { props: Record<string, any> }\n  'prepend-inner': DefaultInputSlot\n  'append-inner': DefaultInputSlot\n  label: DefaultInputSlot & { label: string | undefined, props: Record<string, any> }\n  loader: LoaderSlotProps\n  default: VFieldSlot\n}\n\nexport const VField = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VFieldSlots\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VField',\n\n  inheritAttrs: false,\n\n  props: {\n    id: String,\n\n    ...makeFocusProps(),\n    ...makeVFieldProps(),\n  },\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { loaderClasses } = useLoader(props)\n    const { focusClasses, isFocused, focus, blur } = useFocus(props)\n    const { InputIcon } = useInputIcon(props)\n    const { roundedClasses } = useRounded(props)\n    const { rtlClasses } = useRtl()\n\n    const isActive = toRef(() => props.dirty || props.active)\n    const hasLabel = toRef(() => !!(props.label || slots.label))\n    const hasFloatingLabel = toRef(() => !props.singleLine && hasLabel.value)\n\n    const uid = useId()\n    const id = computed(() => props.id || `input-${uid}`)\n    const messagesId = toRef(() => `${id.value}-messages`)\n\n    const labelRef = ref<VFieldLabel>()\n    const floatingLabelRef = ref<VFieldLabel>()\n    const controlRef = ref<HTMLElement>()\n    const isPlainOrUnderlined = computed(() => ['plain', 'underlined'].includes(props.variant))\n    const color = computed(() => {\n      return props.error || props.disabled ? undefined\n        : isActive.value && isFocused.value ? props.color\n        : props.baseColor\n    })\n    const iconColor = computed(() => {\n      if (!props.iconColor || (props.glow && !isFocused.value)) return undefined\n\n      return props.iconColor === true ? color.value : props.iconColor\n    })\n\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(() => props.bgColor)\n    const { textColorClasses, textColorStyles } = useTextColor(color)\n\n    watch(isActive, val => {\n      if (hasFloatingLabel.value) {\n        const el: HTMLElement = labelRef.value!.$el\n        const targetEl: HTMLElement = floatingLabelRef.value!.$el\n\n        requestAnimationFrame(() => {\n          const rect = nullifyTransforms(el)\n          const targetRect = targetEl.getBoundingClientRect()\n\n          const x = targetRect.x - rect.x\n          const y = targetRect.y - rect.y - (rect.height / 2 - targetRect.height / 2)\n\n          const targetWidth = targetRect.width / 0.75\n          const width = Math.abs(targetWidth - rect.width) > 1\n            ? { maxWidth: convertToUnit(targetWidth) }\n            : undefined\n\n          const style = getComputedStyle(el)\n          const targetStyle = getComputedStyle(targetEl)\n          const duration = parseFloat(style.transitionDuration) * 1000 || 150\n          const scale = parseFloat(targetStyle.getPropertyValue('--v-field-label-scale'))\n          const color = targetStyle.getPropertyValue('color')\n\n          el.style.visibility = 'visible'\n          targetEl.style.visibility = 'hidden'\n\n          animate(el, {\n            transform: `translate(${x}px, ${y}px) scale(${scale})`,\n            color,\n            ...width,\n          }, {\n            duration,\n            easing: standardEasing,\n            direction: val ? 'normal' : 'reverse',\n          }).finished.then(() => {\n            el.style.removeProperty('visibility')\n            targetEl.style.removeProperty('visibility')\n          })\n        })\n      }\n    }, { flush: 'post' })\n\n    const slotProps = computed<DefaultInputSlot>(() => ({\n      isActive,\n      isFocused,\n      controlRef,\n      blur,\n      focus,\n    }))\n\n    function onClick (e: MouseEvent) {\n      if (e.target !== document.activeElement) {\n        e.preventDefault()\n      }\n    }\n\n    useRender(() => {\n      const isOutlined = props.variant === 'outlined'\n      const hasPrepend = !!(slots['prepend-inner'] || props.prependInnerIcon)\n      const hasClear = !!(props.clearable || slots.clear) && !props.disabled\n      const hasAppend = !!(slots['append-inner'] || props.appendInnerIcon || hasClear)\n      const label = () => (\n        slots.label\n          ? slots.label({\n            ...slotProps.value,\n            label: props.label,\n            props: { for: id.value },\n          })\n          : props.label\n      )\n\n      return (\n        <div\n          class={[\n            'v-field',\n            {\n              'v-field--active': isActive.value,\n              'v-field--appended': hasAppend,\n              'v-field--center-affix': props.centerAffix ?? !isPlainOrUnderlined.value,\n              'v-field--disabled': props.disabled,\n              'v-field--dirty': props.dirty,\n              'v-field--error': props.error,\n              'v-field--glow': props.glow,\n              'v-field--flat': props.flat,\n              'v-field--has-background': !!props.bgColor,\n              'v-field--persistent-clear': props.persistentClear,\n              'v-field--prepended': hasPrepend,\n              'v-field--reverse': props.reverse,\n              'v-field--single-line': props.singleLine,\n              'v-field--no-label': !label(),\n              [`v-field--variant-${props.variant}`]: true,\n            },\n            themeClasses.value,\n            backgroundColorClasses.value,\n            focusClasses.value,\n            loaderClasses.value,\n            roundedClasses.value,\n            rtlClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            props.style,\n          ]}\n          onClick={ onClick }\n          { ...attrs }\n        >\n          <div class=\"v-field__overlay\" />\n\n          <LoaderSlot\n            name=\"v-field\"\n            active={ !!props.loading }\n            color={ props.error ? 'error' : (typeof props.loading === 'string' ? props.loading : props.color) }\n            v-slots={{ default: slots.loader }}\n          />\n\n          { hasPrepend && (\n            <div\n              key=\"prepend\"\n              class=\"v-field__prepend-inner\"\n              onMousedown={ (e: MouseEvent) => {\n                e.preventDefault()\n                e.stopPropagation()\n              }}\n            >\n              { props.prependInnerIcon && (\n                <InputIcon\n                  key=\"prepend-icon\"\n                  name=\"prependInner\"\n                  color={ iconColor.value }\n                />\n              )}\n\n              { slots['prepend-inner']?.(slotProps.value) }\n            </div>\n          )}\n\n          <div class=\"v-field__field\" data-no-activator=\"\">\n            {['filled', 'solo', 'solo-inverted', 'solo-filled'].includes(props.variant) && hasFloatingLabel.value && (\n              <VFieldLabel\n                key=\"floating-label\"\n                ref={ floatingLabelRef }\n                class={[textColorClasses.value]}\n                floating\n                for={ id.value }\n                style={ textColorStyles.value }\n              >\n                { label() }\n              </VFieldLabel>\n            )}\n\n            { hasLabel.value && (\n              <VFieldLabel key=\"label\" ref={ labelRef } for={ id.value }>\n                { label() }\n              </VFieldLabel>\n            )}\n\n            { slots.default?.({\n              ...slotProps.value,\n              props: {\n                id: id.value,\n                class: 'v-field__input',\n                'aria-describedby': messagesId.value,\n              },\n              focus,\n              blur,\n            } as VFieldSlot) ?? (\n              <div\n                id={ id.value }\n                class=\"v-field__input\"\n                aria-describedby={ messagesId.value }\n              />\n            )}\n          </div>\n\n          { hasClear && (\n            <VExpandXTransition key=\"clear\">\n              <div\n                class=\"v-field__clearable\"\n                v-show={ props.dirty }\n                onMousedown={ (e: MouseEvent) => {\n                  e.preventDefault()\n                  e.stopPropagation()\n                }}\n              >\n              <VDefaultsProvider\n                defaults={{\n                  VIcon: {\n                    icon: props.clearIcon,\n                  },\n                }}\n              >\n                { slots.clear\n                  ? slots.clear({\n                    ...slotProps.value,\n                    props: {\n                      onFocus: focus,\n                      onBlur: blur,\n                      onClick: props['onClick:clear'],\n                      tabindex: -1,\n                    },\n                  })\n                  : (\n                    <InputIcon\n                      name=\"clear\"\n                      onFocus={ focus }\n                      onBlur={ blur }\n                      tabindex={ -1 }\n                    />\n                  )}\n                </VDefaultsProvider>\n              </div>\n            </VExpandXTransition>\n          )}\n\n          { hasAppend && (\n            <div\n              key=\"append\"\n              class=\"v-field__append-inner\"\n              onMousedown={ (e: MouseEvent) => {\n                e.preventDefault()\n                e.stopPropagation()\n              }}\n            >\n              { slots['append-inner']?.(slotProps.value) }\n\n              { props.appendInnerIcon && (\n                <InputIcon\n                  key=\"append-icon\"\n                  name=\"appendInner\"\n                  color={ iconColor.value }\n                />\n              )}\n            </div>\n          )}\n\n          <div\n            class={[\n              'v-field__outline',\n              textColorClasses.value,\n            ]}\n            style={ textColorStyles.value }\n          >\n            { isOutlined && (\n              <>\n                <div class=\"v-field__outline__start\" />\n\n                { hasFloatingLabel.value && (\n                  <div class=\"v-field__outline__notch\">\n                    <VFieldLabel ref={ floatingLabelRef } floating for={ id.value }>\n                      { label() }\n                    </VFieldLabel>\n                  </div>\n                )}\n\n                <div class=\"v-field__outline__end\" />\n              </>\n            )}\n\n            { isPlainOrUnderlined.value && hasFloatingLabel.value && (\n              <VFieldLabel ref={ floatingLabelRef } floating for={ id.value }>\n                { label() }\n              </VFieldLabel>\n            )}\n          </div>\n        </div>\n      )\n    })\n\n    return {\n      controlRef,\n      fieldIconColor: iconColor,\n    }\n  },\n})\n\nexport type VField = InstanceType<typeof VField>\n", "// Components\nimport { VLabel } from '@/components/VLabel'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVFieldLabelProps = propsFactory({\n  floating: Boolean,\n\n  ...makeComponentProps(),\n}, 'VFieldLabel')\n\nexport const VFieldLabel = genericComponent()({\n  name: 'VFieldLabel',\n\n  props: makeVFieldLabelProps(),\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <VLabel\n        class={[\n          'v-field-label',\n          { 'v-field-label--floating': props.floating },\n          props.class,\n        ]}\n        style={ props.style }\n        aria-hidden={ props.floating || undefined }\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VFieldLabel = InstanceType<typeof VFieldLabel>\n", "interface AutofocusProps {\n  autofocus: boolean\n}\n\nexport function useAutofocus (props: AutofocusProps) {\n  function onIntersect (\n    isIntersecting: boolean,\n    entries: IntersectionObserverEntry[]\n  ) {\n    if (!props.autofocus || !isIntersecting) return\n\n    (entries[0].target as HTMLInputElement)?.focus?.()\n  }\n\n  return {\n    onIntersect,\n  }\n}\n", "// Styles\nimport './VVirtualScroll.sass'\n\n// Components\nimport { VVirtualScrollItem } from './VVirtualScrollItem'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { useToggleScope } from '@/composables/toggleScope'\nimport { makeVirtualProps, useVirtual } from '@/composables/virtual'\n\n// Utilities\nimport { onMounted, onScopeDispose, toRef } from 'vue'\nimport {\n  convertToUnit,\n  genericComponent,\n  getCurrentInstance,\n  getScrollParent,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport interface VVirtualScrollSlot<T> {\n  item: T\n  index: number\n}\n\nexport const makeVVirtualScrollProps = propsFactory({\n  items: {\n    type: Array as PropType<readonly unknown[]>,\n    default: () => ([]),\n  },\n  renderless: Boolean,\n\n  ...makeVirtualProps(),\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n}, 'VVirtualScroll')\n\nexport const VVirtualScroll = genericComponent<new <T, Renderless extends boolean = false>(\n  props: {\n    items?: readonly T[]\n    renderless?: Renderless\n  },\n  slots: {\n    default: VVirtualScrollSlot<T> & (Renderless extends true ? {\n      itemRef: Ref<HTMLElement | undefined>\n    } : {})\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VVirtualScroll',\n\n  props: makeVVirtualScrollProps(),\n\n  setup (props, { slots }) {\n    const vm = getCurrentInstance('VVirtualScroll')\n    const { dimensionStyles } = useDimension(props)\n    const {\n      calculateVisibleItems,\n      containerRef,\n      markerRef,\n      handleScroll,\n      handleScrollend,\n      handleItemResize,\n      scrollToIndex,\n      paddingTop,\n      paddingBottom,\n      computedItems,\n    } = useVirtual(props, toRef(() => props.items))\n\n    useToggleScope(() => props.renderless, () => {\n      function handleListeners (add = false) {\n        const method = add ? 'addEventListener' : 'removeEventListener'\n\n        if (containerRef.value === document.documentElement) {\n          document[method]('scroll', handleScroll, { passive: true })\n          document[method]('scrollend', handleScrollend)\n        } else {\n          containerRef.value?.[method]('scroll', handleScroll, { passive: true })\n          containerRef.value?.[method]('scrollend', handleScrollend)\n        }\n      }\n\n      onMounted(() => {\n        containerRef.value = getScrollParent(vm.vnode.el as HTMLElement, true)\n        handleListeners(true)\n      })\n      onScopeDispose(handleListeners)\n    })\n\n    useRender(() => {\n      const children = computedItems.value.map(item => (\n        <VVirtualScrollItem\n          key={ item.key }\n          renderless={ props.renderless }\n          onUpdate:height={ height => handleItemResize(item.index, height) }\n        >\n          { slotProps => slots.default?.({ item: item.raw, index: item.index, ...slotProps }) }\n        </VVirtualScrollItem>\n      ))\n\n      return props.renderless ? (\n        <>\n          <div ref={ markerRef } class=\"v-virtual-scroll__spacer\" style={{ paddingTop: convertToUnit(paddingTop.value) }} />\n          { children }\n          <div class=\"v-virtual-scroll__spacer\" style={{ paddingBottom: convertToUnit(paddingBottom.value) }} />\n        </>\n      ) : (\n        <div\n          ref={ containerRef }\n          class={[\n            'v-virtual-scroll',\n            props.class,\n          ]}\n          onScrollPassive={ handleScroll }\n          onScrollend={ handleScrollend }\n          style={[\n            dimensionStyles.value,\n            props.style,\n          ]}\n        >\n          <div\n            ref={ markerRef }\n            class=\"v-virtual-scroll__container\"\n            style={{\n              paddingTop: convertToUnit(paddingTop.value),\n              paddingBottom: convertToUnit(paddingBottom.value),\n            }}\n          >\n            { children }\n          </div>\n        </div>\n      )\n    })\n\n    return {\n      calculateVisibleItems,\n      scrollToIndex,\n    }\n  },\n})\n\nexport type VVirtualScroll = InstanceType<typeof VVirtualScroll>\n", "// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { watch } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { GenericProps, TemplateRef } from '@/util'\n\nexport const makeVVirtualScrollItemProps = propsFactory({\n  renderless: Boolean,\n\n  ...makeComponentProps(),\n}, 'VVirtualScrollItem')\n\nexport const VVirtualScrollItem = genericComponent<new <Renderless extends boolean = false>(\n  props: {\n    renderless?: Renderless\n  },\n  slots: {\n    default: Renderless extends true ? {\n      itemRef: TemplateRef\n    } : never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VVirtualScrollItem',\n\n  inheritAttrs: false,\n\n  props: makeVVirtualScrollItemProps(),\n\n  emits: {\n    'update:height': (height: number) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { resizeRef, contentRect } = useResizeObserver(undefined, 'border')\n\n    watch(() => contentRect.value?.height, height => {\n      if (height != null) emit('update:height', height)\n    })\n\n    useRender(() => props.renderless ? (\n      <>\n        { slots.default?.({ itemRef: resizeRef }) }\n      </>\n    ) : (\n      <div\n        ref={ resizeRef }\n        class={[\n          'v-virtual-scroll__item',\n          props.class,\n        ]}\n        style={ props.style }\n        { ...attrs }\n      >\n        { (slots.default as any)?.() }\n      </div>\n    ))\n  },\n})\n", "// Composables\nimport { useDisplay } from '@/composables/display'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { computed, nextTick, onScopeDispose, ref, shallowRef, watch, watchEffect } from 'vue'\nimport { clamp, debounce, getPropertyFromItem, IN_BROWSER, propsFactory } from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { SelectItemKey } from '@/util'\n\nconst UP = -1\nconst DOWN = 1\n\n/** Determines how large each batch of items should be */\nconst BUFFER_PX = 100\n\ntype VirtualProps = {\n  itemHeight: number | string | null | undefined\n  itemKey: SelectItemKey\n  height: number | string | undefined\n}\n\nexport const makeVirtualProps = propsFactory({\n  itemHeight: {\n    type: [Number, String],\n    default: null,\n  },\n  itemKey: {\n    type: [String, Array, Function] as PropType<SelectItemKey>,\n    default: null,\n  },\n  height: [Number, String],\n}, 'virtual')\n\nexport function useVirtual <T> (props: VirtualProps, items: Ref<readonly T[]>) {\n  const display = useDisplay()\n\n  const itemHeight = shallowRef(0)\n  watchEffect(() => {\n    itemHeight.value = parseFloat(props.itemHeight || 0)\n  })\n\n  const first = shallowRef(0)\n  const last = shallowRef(Math.ceil(\n    // Assume 16px items filling the entire screen height if\n    // not provided. This is probably incorrect but it minimises\n    // the chance of ending up with empty space at the bottom.\n    // The default value is set here to avoid poisoning getSize()\n    (parseInt(props.height!) || display.height.value) / (itemHeight.value || 16)\n  ) || 1)\n  const paddingTop = shallowRef(0)\n  const paddingBottom = shallowRef(0)\n\n  /** The scrollable element */\n  const containerRef = ref<HTMLElement>()\n  /** An element marking the top of the scrollable area,\n   * used to add an offset if there's padding or other elements above the virtual list */\n  const markerRef = ref<HTMLElement>()\n  /** markerRef's offsetTop, lazily evaluated */\n  let markerOffset = 0\n\n  const { resizeRef, contentRect } = useResizeObserver()\n  watchEffect(() => {\n    resizeRef.value = containerRef.value\n  })\n  const viewportHeight = computed(() => {\n    return containerRef.value === document.documentElement\n      ? display.height.value\n      : contentRect.value?.height || parseInt(props.height!) || 0\n  })\n  /** All static elements have been rendered and we have an assumed item height */\n  const hasInitialRender = computed(() => {\n    return !!(containerRef.value && markerRef.value && viewportHeight.value && itemHeight.value)\n  })\n\n  let sizes = Array.from<number | null>({ length: items.value.length })\n  let offsets = Array.from<number>({ length: items.value.length })\n  const updateTime = shallowRef(0)\n  let targetScrollIndex = -1\n\n  function getSize (index: number) {\n    return sizes[index] || itemHeight.value\n  }\n\n  const updateOffsets = debounce(() => {\n    const start = performance.now()\n    offsets[0] = 0\n    const length = items.value.length\n    for (let i = 1; i <= length - 1; i++) {\n      offsets[i] = (offsets[i - 1] || 0) + getSize(i - 1)\n    }\n    updateTime.value = Math.max(updateTime.value, performance.now() - start)\n  }, updateTime)\n\n  const unwatch = watch(hasInitialRender, v => {\n    if (!v) return\n    // First render is complete, update offsets and visible\n    // items in case our assumed item height was incorrect\n\n    unwatch()\n    markerOffset = markerRef.value!.offsetTop\n    updateOffsets.immediate()\n    calculateVisibleItems()\n\n    if (!~targetScrollIndex) return\n\n    nextTick(() => {\n      IN_BROWSER && window.requestAnimationFrame(() => {\n        scrollToIndex(targetScrollIndex)\n        targetScrollIndex = -1\n      })\n    })\n  })\n\n  onScopeDispose(() => {\n    updateOffsets.clear()\n  })\n\n  function handleItemResize (index: number, height: number) {\n    const prevHeight = sizes[index]\n    const prevMinHeight = itemHeight.value\n\n    itemHeight.value = prevMinHeight ? Math.min(itemHeight.value, height) : height\n\n    if (prevHeight !== height || prevMinHeight !== itemHeight.value) {\n      sizes[index] = height\n      updateOffsets()\n    }\n  }\n\n  function calculateOffset (index: number) {\n    index = clamp(index, 0, items.value.length - 1)\n    return offsets[index] || 0\n  }\n\n  function calculateIndex (scrollTop: number) {\n    return binaryClosest(offsets, scrollTop)\n  }\n\n  let lastScrollTop = 0\n  let scrollVelocity = 0\n  let lastScrollTime = 0\n\n  watch(viewportHeight, (val, oldVal) => {\n    if (oldVal) {\n      calculateVisibleItems()\n      if (val < oldVal) {\n        requestAnimationFrame(() => {\n          scrollVelocity = 0\n          calculateVisibleItems()\n        })\n      }\n    }\n  })\n\n  let scrollTimeout = -1\n  function handleScroll () {\n    if (!containerRef.value || !markerRef.value) return\n\n    const scrollTop = containerRef.value.scrollTop\n    const scrollTime = performance.now()\n    const scrollDeltaT = scrollTime - lastScrollTime\n\n    if (scrollDeltaT > 500) {\n      scrollVelocity = Math.sign(scrollTop - lastScrollTop)\n\n      // Not super important, only update at the\n      // start of a scroll sequence to avoid reflows\n      markerOffset = markerRef.value.offsetTop\n    } else {\n      scrollVelocity = scrollTop - lastScrollTop\n    }\n\n    lastScrollTop = scrollTop\n    lastScrollTime = scrollTime\n\n    window.clearTimeout(scrollTimeout)\n    scrollTimeout = window.setTimeout(handleScrollend, 500)\n\n    calculateVisibleItems()\n  }\n  function handleScrollend () {\n    if (!containerRef.value || !markerRef.value) return\n\n    scrollVelocity = 0\n    lastScrollTime = 0\n\n    window.clearTimeout(scrollTimeout)\n    calculateVisibleItems()\n  }\n\n  let raf = -1\n  function calculateVisibleItems () {\n    cancelAnimationFrame(raf)\n    raf = requestAnimationFrame(_calculateVisibleItems)\n  }\n  function _calculateVisibleItems () {\n    if (!containerRef.value || !viewportHeight.value) return\n    const scrollTop = lastScrollTop - markerOffset\n    const direction = Math.sign(scrollVelocity)\n\n    const startPx = Math.max(0, scrollTop - BUFFER_PX)\n    const start = clamp(calculateIndex(startPx), 0, items.value.length)\n\n    const endPx = scrollTop + viewportHeight.value + BUFFER_PX\n    const end = clamp(calculateIndex(endPx) + 1, start + 1, items.value.length)\n\n    if (\n      // Only update the side we're scrolling towards,\n      // the other side will be updated incidentally\n      (direction !== UP || start < first.value) &&\n      (direction !== DOWN || end > last.value)\n    ) {\n      const topOverflow = calculateOffset(first.value) - calculateOffset(start)\n      const bottomOverflow = calculateOffset(end) - calculateOffset(last.value)\n      const bufferOverflow = Math.max(topOverflow, bottomOverflow)\n\n      if (bufferOverflow > BUFFER_PX) {\n        first.value = start\n        last.value = end\n      } else {\n        // Only update the side that's reached its limit if there's still buffer left\n        if (start <= 0) first.value = start\n        if (end >= items.value.length) last.value = end\n      }\n    }\n\n    paddingTop.value = calculateOffset(first.value)\n    paddingBottom.value = calculateOffset(items.value.length) - calculateOffset(last.value)\n  }\n\n  function scrollToIndex (index: number) {\n    const offset = calculateOffset(index)\n    if (!containerRef.value || (index && !offset)) {\n      targetScrollIndex = index\n    } else {\n      containerRef.value.scrollTop = offset\n    }\n  }\n\n  const computedItems = computed(() => {\n    return items.value.slice(first.value, last.value).map((item, index) => {\n      const _index = index + first.value\n      return {\n        raw: item,\n        index: _index,\n        key: getPropertyFromItem(item, props.itemKey, _index),\n      }\n    })\n  })\n\n  watch(items, () => {\n    sizes = Array.from({ length: items.value.length })\n    offsets = Array.from({ length: items.value.length })\n    updateOffsets.immediate()\n    calculateVisibleItems()\n  }, { deep: 1 })\n\n  return {\n    calculateVisibleItems,\n    containerRef,\n    markerRef,\n    computedItems,\n    paddingTop,\n    paddingBottom,\n    scrollToIndex,\n    handleScroll,\n    handleScrollend,\n    handleItemResize,\n  }\n}\n\n// https://gist.github.com/robertleeplummerjr/1cc657191d34ecd0a324\nfunction binaryClosest (arr: ArrayLike<number>, val: number) {\n  let high = arr.length - 1\n  let low = 0\n  let mid = 0\n  let item = null\n  let target = -1\n\n  if (arr[high]! < val) {\n    return high\n  }\n\n  while (low <= high) {\n    mid = (low + high) >> 1\n    item = arr[mid]!\n\n    if (item > val) {\n      high = mid - 1\n    } else if (item < val) {\n      target = mid\n      low = mid + 1\n    } else if (item === val) {\n      return mid\n    } else {\n      return low\n    }\n  }\n\n  return target\n}\n", "// Utilities\nimport { shallowRef, watch } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { VList } from '@/components/VList'\nimport type { VTextField } from '@/components/VTextField'\n\nexport function useScrolling (listRef: Ref<VList | undefined>, textFieldRef: Ref<VTextField | undefined>) {\n  const isScrolling = shallowRef(false)\n  let scrollTimeout: number\n  function onListScroll (e: Event) {\n    cancelAnimationFrame(scrollTimeout)\n    isScrolling.value = true\n    scrollTimeout = requestAnimationFrame(() => {\n      scrollTimeout = requestAnimationFrame(() => {\n        isScrolling.value = false\n      })\n    })\n  }\n  async function finishScrolling () {\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise<void>(resolve => {\n      if (isScrolling.value) {\n        const stop = watch(isScrolling, () => {\n          stop()\n          resolve()\n        })\n      } else resolve()\n    })\n  }\n  async function onListKeydown (e: KeyboardEvent) {\n    if (e.key === 'Tab') {\n      textFieldRef.value?.focus()\n    }\n\n    if (!['PageDown', 'PageUp', 'Home', 'End'].includes(e.key)) return\n    const el: HTMLElement = listRef.value?.$el\n    if (!el) return\n\n    if (e.key === 'Home' || e.key === 'End') {\n      el.scrollTo({\n        top: e.key === 'Home' ? 0 : el.scrollHeight,\n        behavior: 'smooth',\n      })\n    }\n\n    await finishScrolling()\n\n    const children = el.querySelectorAll(':scope > :not(.v-virtual-scroll__spacer)')\n\n    if (e.key === 'PageDown' || e.key === 'Home') {\n      const top = el.getBoundingClientRect().top\n      for (const child of children) {\n        if (child.getBoundingClientRect().top >= top) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    } else {\n      const bottom = el.getBoundingClientRect().bottom\n      for (const child of [...children].reverse()) {\n        if (child.getBoundingClientRect().bottom <= bottom) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    }\n  }\n\n  return {\n    onScrollPassive: onListScroll,\n    onKeydown: onListKeydown,\n  } as Record<string, Function> // typescript doesn't know about vue's event merging\n}\n"],
  "mappings": "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",
  "names": ["makeVCheckboxBtnProps", "propsFactory", "indeterminate", "Boolean", "indeterminateIcon", "type", "IconValue", "default", "makeVSelectionControlProps", "falseIcon", "trueIcon", "VCheckboxBtn", "genericComponent", "name", "props", "emits", "value", "setup", "_ref", "slots", "useProxiedModel", "model", "onChange", "v", "toRef", "useRender", "controlProps", "omit", "VSelectionControl", "filterProps", "_createVNode", "_mergeProps", "$event", "class", "style", "undefined", "makeVCheckboxProps", "propsFactory", "makeVInputProps", "omit", "makeVCheckboxBtnProps", "VCheckbox", "genericComponent", "name", "inheritAttrs", "props", "emits", "value", "focused", "setup", "_ref", "attrs", "slots", "model", "useProxiedModel", "isFocused", "focus", "blur", "useFocus", "uid", "useId", "useRender", "rootAttrs", "controlAttrs", "filterInputAttrs", "inputProps", "VInput", "filterProps", "checkboxProps", "VCheckboxBtn", "_createVNode", "_mergeProps", "class", "$event", "id", "style", "default", "_ref2", "messagesId", "isDisabled", "isReadonly", "isValid", "DepthKey", "Symbol", "for", "ListKey", "Symbol", "for", "createList", "parent", "inject", "hasPrepend", "shallowRef", "updateHasPrepend", "data", "value", "provide", "useList", "independentActiveStrategy", "mandatory", "strategy", "activate", "_ref", "id", "value", "activated", "toRaw", "size", "has", "add", "delete", "in", "v", "children", "parents", "set", "Set", "wrapInArray", "out", "Array", "from", "independentSingleActiveStrategy", "parentStrategy", "_ref2", "rest", "singleSelected", "arr", "length", "slice", "leafActiveStrategy", "_ref3", "leafSingleActiveStrategy", "_ref4", "singleOpenStrategy", "open", "_ref", "id", "value", "opened", "parents", "newOpened", "Set", "add", "parent", "get", "delete", "select", "multipleOpenStrategy", "_ref2", "listOpenStrategy", "_ref3", "path", "push", "independentSelectStrategy", "mandatory", "strategy", "select", "_ref", "id", "value", "selected", "toRaw", "on", "Array", "from", "entries", "reduce", "arr", "_ref2", "key", "push", "length", "set", "in", "v", "children", "parents", "map", "Map", "out", "independentSingleSelectStrategy", "parentStrategy", "_ref3", "rest", "singleSelected", "has", "get", "slice", "leafSelectStrategy", "_ref4", "leafSingleSelectStrategy", "_ref5", "classicSelectStrategy", "_ref6", "original", "items", "item", "shift", "parent", "childrenIds", "everySelected", "every", "cid", "noneSelected", "_ref7", "trunkSelectStrategy", "VNestedSymbol", "Symbol", "for", "emptyNested", "id", "shallowRef", "root", "register", "unregister", "parents", "ref", "Map", "children", "open", "openOnSelect", "activate", "select", "activatable", "selectable", "opened", "Set", "activated", "selected", "selectedValues", "getPath", "makeNestedProps", "propsFactory", "Boolean", "activeStrategy", "String", "Function", "Object", "selectStrategy", "openStrategy", "mandatory", "useNested", "props", "isUnmounted", "useProxiedModel", "v", "values", "computed", "leafActiveStrategy", "leafSingleActiveStrategy", "independentActiveStrategy", "independentSingleActiveStrategy", "leafSingleSelectStrategy", "leafSelectStrategy", "independentSelectStrategy", "independentSingleSelectStrategy", "trunkSelectStrategy", "classicSelectStrategy", "listOpenStrategy", "singleOpenStrategy", "multipleOpenStrategy", "value", "in", "out", "onBeforeUnmount", "path", "parent", "unshift", "get", "vm", "getCurrentInstance", "nodeIds", "nested", "toRef", "arr", "key", "entries", "push", "parentId", "isGroup", "has", "map", "join", "newPath", "concat", "consoleError", "add", "set", "delete", "list", "filter", "child", "event", "emit", "newOpened", "newSelected", "newActivated", "size", "provide", "useNestedItem", "inject", "uidSymbol", "computedId", "toValue", "item", "e", "isOpen", "isActivated", "toRaw", "isSelected", "isIndeterminate", "isLeaf", "isGroupActivator", "onBeforeMount", "useNestedGroupActivator", "VListGroupActivator", "defineComponent", "name", "setup", "_", "_ref", "slots", "useNestedGroupActivator", "default", "makeVListGroupProps", "propsFactory", "activeColor", "String", "baseColor", "color", "collapseIcon", "type", "IconValue", "expandIcon", "rawId", "Number", "prependIcon", "appendIcon", "fluid", "Boolean", "subgroup", "title", "value", "makeComponentProps", "makeTagProps", "VListGroup", "genericComponent", "props", "_ref2", "isOpen", "open", "id", "_id", "useNestedItem", "computed", "list", "useList", "isBooted", "useSsrBoot", "onClick", "e", "includes", "target", "tagName", "activatorProps", "class", "toggleIcon", "activatorDefaults", "VListItem", "active", "useRender", "_createVNode", "tag", "_normalizeClass", "hasPrepend", "_normalizeStyle", "style", "activator", "VDefaultsProvider", "MaybeTransition", "component", "VExpandTransition", "_withDirectives", "_createElementVNode", "_vShow", "makeVListItemSubtitleProps", "propsFactory", "opacity", "Number", "String", "makeComponentProps", "makeTagProps", "VListItemSubtitle", "genericComponent", "name", "props", "setup", "_ref", "slots", "useRender", "_createVNode", "tag", "_normalizeClass", "class", "_normalizeStyle", "style", "VListItemTitle", "createSimpleFunctional", "makeVListItemProps", "propsFactory", "active", "type", "Boolean", "default", "undefined", "activeClass", "String", "activeColor", "appendAvatar", "appendIcon", "IconValue", "baseColor", "disabled", "lines", "link", "nav", "prependAvatar", "prependIcon", "ripple", "Object", "slim", "subtitle", "Number", "title", "value", "onClick", "EventProp", "onClickOnce", "makeBorderProps", "makeComponentProps", "makeDensityProps", "makeDimensionProps", "makeElevationProps", "makeRoundedProps", "makeRouterProps", "makeTagProps", "makeThemeProps", "makeVariantProps", "variant", "VListItem", "genericComponent", "name", "directives", "vRipple", "props", "emits", "click", "e", "setup", "_ref", "attrs", "slots", "emit", "useLink", "id", "computed", "href", "activate", "isActivated", "select", "isOpen", "isSelected", "isIndeterminate", "isGroupActivator", "root", "parent", "openOnSelect", "uid", "useNestedItem", "list", "useList", "isActive", "activatable", "isLink", "toRef", "isSelectable", "selectable", "isClickable", "roundedProps", "rounded", "color", "variantProps", "watch", "val", "handleActiveLink", "onBeforeMount", "open", "themeClasses", "provideTheme", "borderClasses", "useBorder", "colorClasses", "colorStyles", "variantClasses", "useVariant", "densityClasses", "useDensity", "dimensionStyles", "useDimension", "elevationClasses", "useElevation", "roundedClasses", "useRounded", "lineClasses", "slotProps", "includes", "target", "tagName", "navigate", "onKeyDown", "key", "preventDefault", "dispatchEvent", "MouseEvent", "useRender", "Tag", "tag", "hasTitle", "hasSubtitle", "hasAppendMedia", "hasAppend", "append", "hasPrependMedia", "hasPrepend", "prepend", "updateHasPrepend", "deprecate", "_withDirectives", "_createVNode", "_mergeProps", "class", "style", "linkProps", "genOverlays", "_createElementVNode", "_Fragment", "VAvatar", "density", "VIcon", "VDefaultsProvider", "image", "icon", "VListItemAction", "start", "VListItemTitle", "toDisplayString", "VListItemSubtitle", "end", "makeVListSubheaderProps", "propsFactory", "color", "String", "inset", "Boolean", "sticky", "title", "makeComponentProps", "makeTagProps", "VListSubheader", "genericComponent", "name", "props", "setup", "_ref", "slots", "textColorClasses", "textColorStyles", "useTextColor", "useRender", "hasText", "default", "_createVNode", "tag", "_normalizeClass", "value", "class", "_normalizeStyle", "style", "_createElementVNode", "makeVDividerProps", "propsFactory", "color", "String", "inset", "Boolean", "length", "Number", "opacity", "thickness", "vertical", "makeComponentProps", "makeThemeProps", "VDivider", "genericComponent", "name", "props", "setup", "_ref", "attrs", "slots", "themeClasses", "provideTheme", "textColorClasses", "textColorStyles", "useTextColor", "dividerStyles", "computed", "styles", "convertToUnit", "useRender", "divider", "_createElementVNode", "_normalizeClass", "value", "class", "_normalizeStyle", "style", "role", "undefined", "default", "makeVListChildrenProps", "propsFactory", "items", "Array", "returnObject", "Boolean", "VListChildren", "genericComponent", "name", "props", "setup", "_ref", "slots", "createList", "default", "map", "_ref2", "children", "itemProps", "type", "raw", "item", "divider", "_createVNode", "VDivider", "subheader", "VListSubheader", "slotsWithItem", "subtitle", "slotProps", "undefined", "prepend", "append", "title", "listGroupProps", "VListGroup", "filterProps", "_mergeProps", "value", "activator", "_ref3", "activatorProps", "listItemProps", "header", "VListItem", "makeItemsProps", "propsFactory", "items", "type", "Array", "default", "itemTitle", "String", "Function", "itemValue", "itemChildren", "Boolean", "itemProps", "returnObject", "valueComparator", "transformItem", "props", "item", "title", "getPropertyFromItem", "value", "children", "isArray", "omit", "undefined", "_props", "transformItems", "raw", "pick", "array", "push", "useItems", "computed", "hasNullItem", "some", "itemsMap", "shallowRef", "Map", "keylessItems", "watchEffect", "_items", "map", "keyless", "i", "length", "isPrimitive", "values", "get", "set", "transformIn", "_allItems", "_keylessItems", "_hasNullItem", "_returnObject", "hasValueComparator", "deepEqual", "returnValue", "main", "v", "fastItems", "transformOut", "_ref", "_ref2", "transformItem", "props", "item", "type", "getPropertyFromItem", "itemType", "title", "isPrimitive", "itemTitle", "value", "itemValue", "undefined", "children", "itemChildren", "itemProps", "omit", "_props", "transformItems", "raw", "items", "array", "push", "useListItems", "computed", "makeVListProps", "propsFactory", "baseColor", "String", "activeColor", "activeClass", "bgColor", "disabled", "Boolean", "expandIcon", "IconValue", "collapseIcon", "lines", "default", "slim", "nav", "EventProp", "makeNestedProps", "selectStrategy", "openStrategy", "makeBorderProps", "makeComponentProps", "makeDensityProps", "makeDimensionProps", "makeElevationProps", "makeItemsProps", "makeRoundedProps", "makeTagProps", "makeThemeProps", "makeVariantProps", "variant", "VList", "genericComponent", "name", "emits", "setup", "_ref", "slots", "themeClasses", "provideTheme", "backgroundColorClasses", "backgroundColorStyles", "useBackgroundColor", "borderClasses", "useBorder", "densityClasses", "useDensity", "dimensionStyles", "useDimension", "elevationClasses", "useElevation", "roundedClasses", "useRounded", "open", "parents", "select", "getPath", "useNested", "lineClasses", "toRef", "color", "createList", "provideDefaults", "VListGroup", "VListItem", "density", "isFocused", "shallowRef", "contentRef", "ref", "onFocusin", "e", "onFocusout", "onFocus", "relatedTarget", "contains", "focus", "onKeydown", "target", "includes", "tagName", "key", "preventDefault", "onMousedown", "location", "focusChild", "useRender", "_createVNode", "tag", "_normalizeClass", "class", "_normalizeStyle", "style", "VListChildren", "returnObject", "VListImg", "createSimpleFunctional", "makeVListItemActionProps", "propsFactory", "start", "Boolean", "end", "makeComponentProps", "makeTagProps", "VListItemAction", "genericComponent", "name", "props", "setup", "_ref", "slots", "useRender", "_createVNode", "tag", "_normalizeClass", "class", "_normalizeStyle", "style", "makeVListItemMediaProps", "propsFactory", "start", "Boolean", "end", "makeComponentProps", "makeTagProps", "VListItemMedia", "genericComponent", "name", "props", "setup", "_ref", "slots", "useRender", "_createVNode", "tag", "_normalizeClass", "class", "_normalizeStyle", "style", "Refs", "Symbol", "getDescriptor", "obj", "key", "currentObj", "descriptor", "Reflect", "getOwnPropertyDescriptor", "Object", "getPrototypeOf", "undefined", "forwardRefs", "target", "_len", "arguments", "length", "refs", "Array", "_key", "Proxy", "get", "has", "startsWith", "ref", "value", "val", "bind", "set", "_", "setupState", "childRefs", "queue", "slice", "shift", "push", "makeVMenuProps", "propsFactory", "id", "String", "submenu", "Boolean", "omit", "makeVOverlayProps", "closeDelay", "closeOnContentClick", "locationStrategy", "location", "undefined", "openDelay", "scrim", "scrollStrategy", "transition", "component", "VDialogTransition", "VMenu", "genericComponent", "name", "props", "emits", "value", "setup", "_ref", "slots", "isActive", "useProxiedModel", "scopeId", "useScopeId", "isRtl", "useRtl", "uid", "useId", "toRef", "overlay", "ref", "parent", "inject", "VMenuSymbol", "openChildren", "shallowRef", "Set", "provide", "register", "add", "unregister", "delete", "closeParents", "e", "setTimeout", "size", "persistent", "contentEl", "isClickInsideElement", "onBeforeUnmount", "document", "removeEventListener", "onFocusIn", "onDeactivated", "before", "relatedTarget", "after", "target", "nextTick", "globalTop", "includes", "contains", "focusable", "focusableChildren", "focus", "watch", "val", "IN_BROWSER", "addEventListener", "once", "immediate", "onClickOutside", "onKeydown", "disabled", "key", "HTMLTextAreaElement", "HTMLInputElement", "closest", "preventDefault", "nextElement", "getNextElement", "shiftKey", "el", "tabIndex", "activatorEl", "onActivatorKeydown", "stopImmediatePropagation", "focusChild", "activatorProps", "computed", "mergeProps", "useRender", "overlayProps", "VOverlay", "filterProps", "_createVNode", "_mergeProps", "class", "style", "$event", "activator", "default", "_len", "arguments", "length", "args", "Array", "_key", "VDefaultsProvider", "forwardRefs", "Î¨openChildren", "makeVCounterProps", "propsFactory", "active", "Boolean", "disabled", "max", "Number", "String", "value", "type", "default", "makeComponentProps", "makeTransitionProps", "transition", "component", "VSlideYTransition", "VCounter", "genericComponent", "name", "functional", "props", "setup", "_ref", "slots", "counter", "toRef", "useRender", "_createVNode", "MaybeTransition", "_withDirectives", "_createElementVNode", "_normalizeClass", "parseFloat", "class", "_normalizeStyle", "style", "_vShow", "makeVFieldLabelProps", "propsFactory", "floating", "Boolean", "makeComponentProps", "VFieldLabel", "genericComponent", "name", "props", "setup", "_ref", "slots", "useRender", "_createVNode", "VLabel", "_normalizeClass", "class", "_normalizeStyle", "style", "undefined", "allowedVariants", "makeVFieldProps", "propsFactory", "appendInnerIcon", "IconValue", "bgColor", "String", "clearable", "Boolean", "clearIcon", "type", "default", "active", "centerAffix", "undefined", "color", "baseColor", "dirty", "disabled", "glow", "error", "flat", "iconColor", "label", "persistentClear", "prependInnerIcon", "reverse", "singleLine", "variant", "validator", "v", "includes", "EventProp", "makeComponentProps", "makeLoaderProps", "makeRoundedProps", "makeThemeProps", "VField", "genericComponent", "name", "inheritAttrs", "props", "id", "makeFocusProps", "emits", "focused", "value", "setup", "_ref", "attrs", "emit", "slots", "themeClasses", "provideTheme", "loaderClasses", "useLoader", "focusClasses", "isFocused", "focus", "blur", "useFocus", "InputIcon", "useInputIcon", "roundedClasses", "useRounded", "rtlClasses", "useRtl", "isActive", "toRef", "hasLabel", "hasFloatingLabel", "uid", "useId", "computed", "messagesId", "labelRef", "ref", "floatingLabelRef", "controlRef", "isPlainOrUnderlined", "backgroundColorClasses", "backgroundColorStyles", "useBackgroundColor", "textColorClasses", "textColorStyles", "useTextColor", "watch", "val", "el", "$el", "targetEl", "requestAnimationFrame", "rect", "nullifyTransforms", "targetRect", "getBoundingClientRect", "x", "y", "height", "targetWidth", "width", "Math", "abs", "maxWidth", "convertToUnit", "style", "getComputedStyle", "targetStyle", "duration", "parseFloat", "transitionDuration", "scale", "getPropertyValue", "visibility", "animate", "transform", "easing", "standardEasing", "direction", "finished", "then", "removeProperty", "flush", "slotProps", "onClick", "e", "target", "document", "activeElement", "preventDefault", "useRender", "isOutlined", "hasPrepend", "hasClear", "clear", "hasAppend", "for", "_createElementVNode", "_mergeProps", "class", "_createVNode", "LoaderSlot", "loading", "loader", "stopPropagation", "VFieldLabel", "_normalizeClass", "_normalizeStyle", "VExpandXTransition", "_withDirectives", "VDefaultsProvider", "VIcon", "icon", "onFocus", "onBlur", "tabindex", "_vShow", "_Fragment", "fieldIconColor", "useAutofocus", "props", "onIntersect", "isIntersecting", "entries", "autofocus", "target", "focus", "activeTypes", "makeVTextFieldProps", "propsFactory", "autofocus", "Boolean", "counter", "Number", "String", "counterValue", "Function", "prefix", "placeholder", "persistentPlaceholder", "persistentCounter", "suffix", "role", "type", "default", "modelModifiers", "Object", "makeVInputProps", "makeVFieldProps", "VTextField", "genericComponent", "name", "directives", "vIntersect", "inheritAttrs", "props", "emits", "e", "focused", "val", "setup", "_ref", "attrs", "emit", "slots", "model", "useProxiedModel", "isFocused", "focus", "blur", "useFocus", "onIntersect", "useAutofocus", "computed", "value", "toString", "length", "max", "maxlength", "undefined", "isPlainOrUnderlined", "includes", "variant", "vInputRef", "ref", "vFieldRef", "inputRef", "isActive", "active", "onFocus", "nextTick", "document", "activeElement", "onControlMousedown", "target", "preventDefault", "onControlClick", "onClear", "reset", "stopPropagation", "callEvent", "onInput", "el", "trim", "caretPosition", "selectionStart", "selectionEnd", "useRender", "hasCounter", "hasDetails", "details", "rootAttrs", "inputAttrs", "filterInputAttrs", "modelValue", "_", "inputProps", "VInput", "filterProps", "fieldProps", "VField", "_createVNode", "_mergeProps", "$event", "class", "style", "_ref2", "id", "isDisabled", "isDirty", "isReadonly", "isValid", "dirty", "_ref3", "fieldClass", "slotProps", "inputNode", "_withDirectives", "_createElementVNode", "handler", "once", "_Fragment", "_normalizeClass", "cloneVNode", "VCounter", "disabled", "forwardRefs", "makeVVirtualScrollItemProps", "propsFactory", "renderless", "Boolean", "makeComponentProps", "VVirtualScrollItem", "genericComponent", "name", "inheritAttrs", "props", "emits", "height", "setup", "_ref", "attrs", "emit", "slots", "resizeRef", "contentRect", "useResizeObserver", "undefined", "watch", "value", "useRender", "_createElementVNode", "_Fragment", "default", "itemRef", "_mergeProps", "class", "style", "UP", "DOWN", "BUFFER_PX", "makeVirtualProps", "propsFactory", "itemHeight", "type", "Number", "String", "default", "itemKey", "Array", "Function", "height", "useVirtual", "props", "items", "display", "useDisplay", "shallowRef", "watchEffect", "value", "parseFloat", "first", "last", "Math", "ceil", "parseInt", "paddingTop", "paddingBottom", "containerRef", "ref", "markerRef", "markerOffset", "resizeRef", "contentRect", "useResizeObserver", "viewportHeight", "computed", "document", "documentElement", "hasInitialRender", "sizes", "from", "length", "offsets", "updateTime", "targetScrollIndex", "getSize", "index", "updateOffsets", "debounce", "start", "performance", "now", "i", "max", "unwatch", "watch", "v", "offsetTop", "immediate", "calculateVisibleItems", "nextTick", "IN_BROWSER", "window", "requestAnimationFrame", "scrollToIndex", "onScopeDispose", "clear", "handleItemResize", "prevHeight", "prevMinHeight", "min", "calculateOffset", "clamp", "calculateIndex", "scrollTop", "binaryClosest", "lastScrollTop", "scrollVelocity", "lastScrollTime", "val", "oldVal", "scrollTimeout", "handleScroll", "scrollTime", "scrollDeltaT", "sign", "clearTimeout", "setTimeout", "handleScrollend", "raf", "cancelAnimationFrame", "_calculateVisibleItems", "direction", "startPx", "endPx", "end", "topOverflow", "bottomOverflow", "bufferOverflow", "offset", "computedItems", "slice", "map", "item", "_index", "raw", "key", "getPropertyFromItem", "deep", "arr", "high", "low", "mid", "target", "makeVVirtualScrollProps", "propsFactory", "items", "type", "Array", "default", "renderless", "Boolean", "makeVirtualProps", "makeComponentProps", "makeDimensionProps", "VVirtualScroll", "genericComponent", "name", "props", "setup", "_ref", "slots", "vm", "getCurrentInstance", "dimensionStyles", "useDimension", "calculateVisibleItems", "containerRef", "markerRef", "handleScroll", "handleScrollend", "handleItemResize", "scrollToIndex", "paddingTop", "paddingBottom", "computedItems", "useVirtual", "toRef", "useToggleScope", "handleListeners", "add", "arguments", "length", "undefined", "method", "value", "document", "documentElement", "passive", "onMounted", "getScrollParent", "vnode", "el", "onScopeDispose", "useRender", "children", "map", "item", "_createVNode", "VVirtualScrollItem", "key", "height", "index", "slotProps", "raw", "_createElementVNode", "_Fragment", "convertToUnit", "_normalizeClass", "class", "_normalizeStyle", "style", "useScrolling", "listRef", "textFieldRef", "isScrolling", "shallowRef", "scrollTimeout", "onListScroll", "e", "cancelAnimationFrame", "value", "requestAnimationFrame", "finishScrolling", "Promise", "resolve", "stop", "watch", "onListKeydown", "key", "focus", "includes", "el", "$el", "scrollTo", "top", "scrollHeight", "behavior", "children", "querySelectorAll", "getBoundingClientRect", "child", "bottom", "reverse", "onScrollPassive", "onKeydown", "makeSelectProps", "propsFactory", "chips", "Boolean", "closableChips", "closeText", "type", "String", "default", "openText", "eager", "hideNoData", "hideSelected", "listProps", "Object", "menu", "menuIcon", "IconValue", "menuProps", "multiple", "noDataText", "openOnClear", "itemColor", "makeItemsProps", "itemChildren", "makeVSelectProps", "omit", "makeVTextFieldProps", "modelValue", "role", "makeTransitionProps", "transition", "component", "VDialogTransition", "VSelect", "genericComponent", "name", "props", "emits", "focused", "value", "ue", "setup", "_ref", "slots", "t", "useLocale", "vTextFieldRef", "ref", "vMenuRef", "vVirtualScrollRef", "items", "transformIn", "transformOut", "useItems", "model", "useProxiedModel", "v", "wrapInArray", "transformed", "counterValue", "computed", "length", "form", "useForm", "selectedValues", "map", "selection", "isFocused", "shallowRef", "keyboardLookupPrefix", "keyboardLookupIndex", "keyboardLookupLastTime", "displayItems", "filter", "item", "some", "s", "valueComparator", "deepEqual", "menuDisabled", "isReadonly", "isDisabled", "_menu", "get", "set", "Î¨openChildren", "size", "label", "toRef", "computedMenuProps", "activatorProps", "listRef", "listEvents", "useScrolling", "onClear", "e", "onMousedownControl", "onListKeydown", "checkPrintable", "onKeydown", "key", "includes", "preventDefault", "focus", "KEYBOARD_LOOKUP_THRESHOLD", "now", "performance", "toLowerCase", "findItem", "result", "findItemBase", "at", "slice", "i", "_item", "title", "startsWith", "undefined", "index", "select", "arguments", "disabled", "findIndex", "add", "splice", "nextTick", "onBlur", "$el", "contains", "relatedTarget", "onAfterEnter", "calculateVisibleItems", "onAfterLeave", "onFocusin", "onModelUpdate", "matchesSelector", "find", "watch", "IN_BROWSER", "window", "requestAnimationFrame", "scrollToIndex", "newVal", "oldVal", "useRender", "hasChips", "chip", "hasList", "isDirty", "textFieldProps", "VTextField", "filterProps", "placeholder", "persistentPlaceholder", "_createVNode", "_mergeProps", "join", "$event", "externalValue", "class", "style", "_createElementVNode", "_Fragment", "VMenu", "VList", "color", "VListItem", "VVirtualScroll", "_ref2", "itemRef", "camelizedProps", "camelizeProps", "itemProps", "mergeProps", "onClick", "prepend", "_ref3", "isSelected", "VCheckboxBtn", "prependAvatar", "VAvatar", "prependIcon", "VIcon", "onChipClose", "stopPropagation", "slotProps", "onMousedown", "hasSlot", "slotContent", "ensureValidVNode", "VChip", "VDefaultsProvider", "closable", "text", "_createTextVNode", "_len", "args", "Array", "_key", "fieldIconColor", "forwardRefs"]
}
