import {
  isObject,
  onlyDefinedProps,
  propsFactory
} from "./chunk-SXDCBQWL.js";
import {
  Transition,
  TransitionGroup,
  h,
  mergeProps
} from "./chunk-VZXQDS5F.js";

// node_modules/vuetify/lib/composables/transition.js
var makeTransitionProps = propsFactory({
  transition: {
    type: null,
    default: "fade-transition",
    validator: (val) => val !== true
  }
}, "transition");
var MaybeTransition = (props, _ref) => {
  let {
    slots
  } = _ref;
  const {
    transition,
    disabled,
    group,
    ...rest
  } = props;
  const {
    component = group ? TransitionGroup : Transition,
    ...customProps
  } = isObject(transition) ? transition : {};
  let transitionProps;
  if (isObject(transition)) {
    transitionProps = mergeProps(customProps, onlyDefinedProps({
      disabled,
      group
    }), rest);
  } else {
    transitionProps = mergeProps({
      name: disabled || !transition ? "" : transition
    }, rest);
  }
  return h(component, transitionProps, slots);
};

export {
  makeTransitionProps,
  MaybeTransition
};
//# sourceMappingURL=chunk-IMB7H5CA.js.map
